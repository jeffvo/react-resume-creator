{"ast":null,"code":"var TYPE = require('../../tokenizer').TYPE;\nvar rawMode = require('./Raw').mode;\nvar ATKEYWORD = TYPE.AtKeyword;\nvar SEMICOLON = TYPE.Semicolon;\nvar LEFTCURLYBRACKET = TYPE.LeftCurlyBracket;\nvar RIGHTCURLYBRACKET = TYPE.RightCurlyBracket;\nfunction consumeRaw(startToken) {\n  return this.Raw(startToken, rawMode.leftCurlyBracketOrSemicolon, true);\n}\nfunction isDeclarationBlockAtrule() {\n  for (var offset = 1, type; type = this.scanner.lookupType(offset); offset++) {\n    if (type === RIGHTCURLYBRACKET) {\n      return true;\n    }\n    if (type === LEFTCURLYBRACKET || type === ATKEYWORD) {\n      return false;\n    }\n  }\n  return false;\n}\nmodule.exports = {\n  name: 'Atrule',\n  structure: {\n    name: String,\n    prelude: ['AtrulePrelude', 'Raw', null],\n    block: ['Block', null]\n  },\n  parse: function () {\n    var start = this.scanner.tokenStart;\n    var name;\n    var nameLowerCase;\n    var prelude = null;\n    var block = null;\n    this.eat(ATKEYWORD);\n    name = this.scanner.substrToCursor(start + 1);\n    nameLowerCase = name.toLowerCase();\n    this.scanner.skipSC();\n\n    // parse prelude\n    if (this.scanner.eof === false && this.scanner.tokenType !== LEFTCURLYBRACKET && this.scanner.tokenType !== SEMICOLON) {\n      if (this.parseAtrulePrelude) {\n        prelude = this.parseWithFallback(this.AtrulePrelude.bind(this, name), consumeRaw);\n\n        // turn empty AtrulePrelude into null\n        if (prelude.type === 'AtrulePrelude' && prelude.children.head === null) {\n          prelude = null;\n        }\n      } else {\n        prelude = consumeRaw.call(this, this.scanner.tokenIndex);\n      }\n      this.scanner.skipSC();\n    }\n    switch (this.scanner.tokenType) {\n      case SEMICOLON:\n        this.scanner.next();\n        break;\n      case LEFTCURLYBRACKET:\n        if (this.atrule.hasOwnProperty(nameLowerCase) && typeof this.atrule[nameLowerCase].block === 'function') {\n          block = this.atrule[nameLowerCase].block.call(this);\n        } else {\n          // TODO: should consume block content as Raw?\n          block = this.Block(isDeclarationBlockAtrule.call(this));\n        }\n        break;\n    }\n    return {\n      type: 'Atrule',\n      loc: this.getLocation(start, this.scanner.tokenStart),\n      name: name,\n      prelude: prelude,\n      block: block\n    };\n  },\n  generate: function (node) {\n    this.chunk('@');\n    this.chunk(node.name);\n    if (node.prelude !== null) {\n      this.chunk(' ');\n      this.node(node.prelude);\n    }\n    if (node.block) {\n      this.node(node.block);\n    } else {\n      this.chunk(';');\n    }\n  },\n  walkContext: 'atrule'\n};","map":{"version":3,"names":["TYPE","require","rawMode","mode","ATKEYWORD","AtKeyword","SEMICOLON","Semicolon","LEFTCURLYBRACKET","LeftCurlyBracket","RIGHTCURLYBRACKET","RightCurlyBracket","consumeRaw","startToken","Raw","leftCurlyBracketOrSemicolon","isDeclarationBlockAtrule","offset","type","scanner","lookupType","module","exports","name","structure","String","prelude","block","parse","start","tokenStart","nameLowerCase","eat","substrToCursor","toLowerCase","skipSC","eof","tokenType","parseAtrulePrelude","parseWithFallback","AtrulePrelude","bind","children","head","call","tokenIndex","next","atrule","hasOwnProperty","Block","loc","getLocation","generate","node","chunk","walkContext"],"sources":["/Users/jeffreyvanoosterwijk/Desktop/repos/resume-generator/node_modules/react-pdf-html/node_modules/css-tree/lib/syntax/node/Atrule.js"],"sourcesContent":["var TYPE = require('../../tokenizer').TYPE;\nvar rawMode = require('./Raw').mode;\n\nvar ATKEYWORD = TYPE.AtKeyword;\nvar SEMICOLON = TYPE.Semicolon;\nvar LEFTCURLYBRACKET = TYPE.LeftCurlyBracket;\nvar RIGHTCURLYBRACKET = TYPE.RightCurlyBracket;\n\nfunction consumeRaw(startToken) {\n    return this.Raw(startToken, rawMode.leftCurlyBracketOrSemicolon, true);\n}\n\nfunction isDeclarationBlockAtrule() {\n    for (var offset = 1, type; type = this.scanner.lookupType(offset); offset++) {\n        if (type === RIGHTCURLYBRACKET) {\n            return true;\n        }\n\n        if (type === LEFTCURLYBRACKET ||\n            type === ATKEYWORD) {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nmodule.exports = {\n    name: 'Atrule',\n    structure: {\n        name: String,\n        prelude: ['AtrulePrelude', 'Raw', null],\n        block: ['Block', null]\n    },\n    parse: function() {\n        var start = this.scanner.tokenStart;\n        var name;\n        var nameLowerCase;\n        var prelude = null;\n        var block = null;\n\n        this.eat(ATKEYWORD);\n\n        name = this.scanner.substrToCursor(start + 1);\n        nameLowerCase = name.toLowerCase();\n        this.scanner.skipSC();\n\n        // parse prelude\n        if (this.scanner.eof === false &&\n            this.scanner.tokenType !== LEFTCURLYBRACKET &&\n            this.scanner.tokenType !== SEMICOLON) {\n            if (this.parseAtrulePrelude) {\n                prelude = this.parseWithFallback(this.AtrulePrelude.bind(this, name), consumeRaw);\n\n                // turn empty AtrulePrelude into null\n                if (prelude.type === 'AtrulePrelude' && prelude.children.head === null) {\n                    prelude = null;\n                }\n            } else {\n                prelude = consumeRaw.call(this, this.scanner.tokenIndex);\n            }\n\n            this.scanner.skipSC();\n        }\n\n        switch (this.scanner.tokenType) {\n            case SEMICOLON:\n                this.scanner.next();\n                break;\n\n            case LEFTCURLYBRACKET:\n                if (this.atrule.hasOwnProperty(nameLowerCase) &&\n                    typeof this.atrule[nameLowerCase].block === 'function') {\n                    block = this.atrule[nameLowerCase].block.call(this);\n                } else {\n                    // TODO: should consume block content as Raw?\n                    block = this.Block(isDeclarationBlockAtrule.call(this));\n                }\n\n                break;\n        }\n\n        return {\n            type: 'Atrule',\n            loc: this.getLocation(start, this.scanner.tokenStart),\n            name: name,\n            prelude: prelude,\n            block: block\n        };\n    },\n    generate: function(node) {\n        this.chunk('@');\n        this.chunk(node.name);\n\n        if (node.prelude !== null) {\n            this.chunk(' ');\n            this.node(node.prelude);\n        }\n\n        if (node.block) {\n            this.node(node.block);\n        } else {\n            this.chunk(';');\n        }\n    },\n    walkContext: 'atrule'\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}