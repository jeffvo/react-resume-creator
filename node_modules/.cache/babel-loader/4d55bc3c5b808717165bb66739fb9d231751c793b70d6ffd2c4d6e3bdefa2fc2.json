{"ast":null,"code":"var TYPE = require('../../tokenizer').TYPE;\nvar DELIM = TYPE.Delim;\nvar IDENT = TYPE.Ident;\nvar DIMENSION = TYPE.Dimension;\nvar PERCENTAGE = TYPE.Percentage;\nvar NUMBER = TYPE.Number;\nvar HASH = TYPE.Hash;\nvar COLON = TYPE.Colon;\nvar LEFTSQUAREBRACKET = TYPE.LeftSquareBracket;\nvar NUMBERSIGN = 0x0023; // U+0023 NUMBER SIGN (#)\nvar ASTERISK = 0x002A; // U+002A ASTERISK (*)\nvar PLUSSIGN = 0x002B; // U+002B PLUS SIGN (+)\nvar SOLIDUS = 0x002F; // U+002F SOLIDUS (/)\nvar FULLSTOP = 0x002E; // U+002E FULL STOP (.)\nvar GREATERTHANSIGN = 0x003E; // U+003E GREATER-THAN SIGN (>)\nvar VERTICALLINE = 0x007C; // U+007C VERTICAL LINE (|)\nvar TILDE = 0x007E; // U+007E TILDE (~)\n\nfunction getNode(context) {\n  switch (this.scanner.tokenType) {\n    case LEFTSQUAREBRACKET:\n      return this.AttributeSelector();\n    case HASH:\n      return this.IdSelector();\n    case COLON:\n      if (this.scanner.lookupType(1) === COLON) {\n        return this.PseudoElementSelector();\n      } else {\n        return this.PseudoClassSelector();\n      }\n    case IDENT:\n      return this.TypeSelector();\n    case NUMBER:\n    case PERCENTAGE:\n      return this.Percentage();\n    case DIMENSION:\n      // throws when .123ident\n      if (this.scanner.source.charCodeAt(this.scanner.tokenStart) === FULLSTOP) {\n        this.error('Identifier is expected', this.scanner.tokenStart + 1);\n      }\n      break;\n    case DELIM:\n      var code = this.scanner.source.charCodeAt(this.scanner.tokenStart);\n      switch (code) {\n        case PLUSSIGN:\n        case GREATERTHANSIGN:\n        case TILDE:\n          context.space = null;\n          context.ignoreWSAfter = true;\n          return this.Combinator();\n        case SOLIDUS:\n          // /deep/\n          return this.Combinator();\n        case FULLSTOP:\n          return this.ClassSelector();\n        case ASTERISK:\n        case VERTICALLINE:\n          return this.TypeSelector();\n        case NUMBERSIGN:\n          return this.IdSelector();\n      }\n      break;\n  }\n}\n;\nmodule.exports = {\n  getNode: getNode\n};","map":{"version":3,"names":["TYPE","require","DELIM","Delim","IDENT","Ident","DIMENSION","Dimension","PERCENTAGE","Percentage","NUMBER","Number","HASH","Hash","COLON","Colon","LEFTSQUAREBRACKET","LeftSquareBracket","NUMBERSIGN","ASTERISK","PLUSSIGN","SOLIDUS","FULLSTOP","GREATERTHANSIGN","VERTICALLINE","TILDE","getNode","context","scanner","tokenType","AttributeSelector","IdSelector","lookupType","PseudoElementSelector","PseudoClassSelector","TypeSelector","source","charCodeAt","tokenStart","error","code","space","ignoreWSAfter","Combinator","ClassSelector","module","exports"],"sources":["/Users/jeffreyvanoosterwijk/Desktop/repos/resume-generator/node_modules/react-pdf-html/node_modules/css-tree/lib/syntax/scope/selector.js"],"sourcesContent":["var TYPE = require('../../tokenizer').TYPE;\n\nvar DELIM = TYPE.Delim;\nvar IDENT = TYPE.Ident;\nvar DIMENSION = TYPE.Dimension;\nvar PERCENTAGE = TYPE.Percentage;\nvar NUMBER = TYPE.Number;\nvar HASH = TYPE.Hash;\nvar COLON = TYPE.Colon;\nvar LEFTSQUAREBRACKET = TYPE.LeftSquareBracket;\nvar NUMBERSIGN = 0x0023;      // U+0023 NUMBER SIGN (#)\nvar ASTERISK = 0x002A;        // U+002A ASTERISK (*)\nvar PLUSSIGN = 0x002B;        // U+002B PLUS SIGN (+)\nvar SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\nvar FULLSTOP = 0x002E;        // U+002E FULL STOP (.)\nvar GREATERTHANSIGN = 0x003E; // U+003E GREATER-THAN SIGN (>)\nvar VERTICALLINE = 0x007C;    // U+007C VERTICAL LINE (|)\nvar TILDE = 0x007E;           // U+007E TILDE (~)\n\nfunction getNode(context) {\n    switch (this.scanner.tokenType) {\n        case LEFTSQUAREBRACKET:\n            return this.AttributeSelector();\n\n        case HASH:\n            return this.IdSelector();\n\n        case COLON:\n            if (this.scanner.lookupType(1) === COLON) {\n                return this.PseudoElementSelector();\n            } else {\n                return this.PseudoClassSelector();\n            }\n\n        case IDENT:\n            return this.TypeSelector();\n\n        case NUMBER:\n        case PERCENTAGE:\n            return this.Percentage();\n\n        case DIMENSION:\n            // throws when .123ident\n            if (this.scanner.source.charCodeAt(this.scanner.tokenStart) === FULLSTOP) {\n                this.error('Identifier is expected', this.scanner.tokenStart + 1);\n            }\n            break;\n\n        case DELIM:\n            var code = this.scanner.source.charCodeAt(this.scanner.tokenStart);\n\n            switch (code) {\n                case PLUSSIGN:\n                case GREATERTHANSIGN:\n                case TILDE:\n                    context.space = null;\n                    context.ignoreWSAfter = true;\n                    return this.Combinator();\n\n                case SOLIDUS:  // /deep/\n                    return this.Combinator();\n\n                case FULLSTOP:\n                    return this.ClassSelector();\n\n                case ASTERISK:\n                case VERTICALLINE:\n                    return this.TypeSelector();\n\n                case NUMBERSIGN:\n                    return this.IdSelector();\n            }\n\n            break;\n    }\n};\n\nmodule.exports = {\n    getNode: getNode\n};\n"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,iBAAiB,CAAC,CAACD,IAAI;AAE1C,IAAIE,KAAK,GAAGF,IAAI,CAACG,KAAK;AACtB,IAAIC,KAAK,GAAGJ,IAAI,CAACK,KAAK;AACtB,IAAIC,SAAS,GAAGN,IAAI,CAACO,SAAS;AAC9B,IAAIC,UAAU,GAAGR,IAAI,CAACS,UAAU;AAChC,IAAIC,MAAM,GAAGV,IAAI,CAACW,MAAM;AACxB,IAAIC,IAAI,GAAGZ,IAAI,CAACa,IAAI;AACpB,IAAIC,KAAK,GAAGd,IAAI,CAACe,KAAK;AACtB,IAAIC,iBAAiB,GAAGhB,IAAI,CAACiB,iBAAiB;AAC9C,IAAIC,UAAU,GAAG,MAAM,CAAC,CAAM;AAC9B,IAAIC,QAAQ,GAAG,MAAM,CAAC,CAAQ;AAC9B,IAAIC,QAAQ,GAAG,MAAM,CAAC,CAAQ;AAC9B,IAAIC,OAAO,GAAG,MAAM,CAAC,CAAS;AAC9B,IAAIC,QAAQ,GAAG,MAAM,CAAC,CAAQ;AAC9B,IAAIC,eAAe,GAAG,MAAM,CAAC,CAAC;AAC9B,IAAIC,YAAY,GAAG,MAAM,CAAC,CAAI;AAC9B,IAAIC,KAAK,GAAG,MAAM,CAAC,CAAW;;AAE9B,SAASC,OAAOA,CAACC,OAAO,EAAE;EACtB,QAAQ,IAAI,CAACC,OAAO,CAACC,SAAS;IAC1B,KAAKb,iBAAiB;MAClB,OAAO,IAAI,CAACc,iBAAiB,CAAC,CAAC;IAEnC,KAAKlB,IAAI;MACL,OAAO,IAAI,CAACmB,UAAU,CAAC,CAAC;IAE5B,KAAKjB,KAAK;MACN,IAAI,IAAI,CAACc,OAAO,CAACI,UAAU,CAAC,CAAC,CAAC,KAAKlB,KAAK,EAAE;QACtC,OAAO,IAAI,CAACmB,qBAAqB,CAAC,CAAC;MACvC,CAAC,MAAM;QACH,OAAO,IAAI,CAACC,mBAAmB,CAAC,CAAC;MACrC;IAEJ,KAAK9B,KAAK;MACN,OAAO,IAAI,CAAC+B,YAAY,CAAC,CAAC;IAE9B,KAAKzB,MAAM;IACX,KAAKF,UAAU;MACX,OAAO,IAAI,CAACC,UAAU,CAAC,CAAC;IAE5B,KAAKH,SAAS;MACV;MACA,IAAI,IAAI,CAACsB,OAAO,CAACQ,MAAM,CAACC,UAAU,CAAC,IAAI,CAACT,OAAO,CAACU,UAAU,CAAC,KAAKhB,QAAQ,EAAE;QACtE,IAAI,CAACiB,KAAK,CAAC,wBAAwB,EAAE,IAAI,CAACX,OAAO,CAACU,UAAU,GAAG,CAAC,CAAC;MACrE;MACA;IAEJ,KAAKpC,KAAK;MACN,IAAIsC,IAAI,GAAG,IAAI,CAACZ,OAAO,CAACQ,MAAM,CAACC,UAAU,CAAC,IAAI,CAACT,OAAO,CAACU,UAAU,CAAC;MAElE,QAAQE,IAAI;QACR,KAAKpB,QAAQ;QACb,KAAKG,eAAe;QACpB,KAAKE,KAAK;UACNE,OAAO,CAACc,KAAK,GAAG,IAAI;UACpBd,OAAO,CAACe,aAAa,GAAG,IAAI;UAC5B,OAAO,IAAI,CAACC,UAAU,CAAC,CAAC;QAE5B,KAAKtB,OAAO;UAAG;UACX,OAAO,IAAI,CAACsB,UAAU,CAAC,CAAC;QAE5B,KAAKrB,QAAQ;UACT,OAAO,IAAI,CAACsB,aAAa,CAAC,CAAC;QAE/B,KAAKzB,QAAQ;QACb,KAAKK,YAAY;UACb,OAAO,IAAI,CAACW,YAAY,CAAC,CAAC;QAE9B,KAAKjB,UAAU;UACX,OAAO,IAAI,CAACa,UAAU,CAAC,CAAC;MAChC;MAEA;EACR;AACJ;AAAC;AAEDc,MAAM,CAACC,OAAO,GAAG;EACbpB,OAAO,EAAEA;AACb,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}