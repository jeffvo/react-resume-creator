{"ast":null,"code":"var fs = require('fs');\nvar childprocess = require('child_process');\nvar path = require('path');\nvar assert = require('assert');\ntry {\n  var phantomjs = require('phantomjs-prebuilt');\n} catch (err) {\n  console.log('html-pdf: Failed to load PhantomJS module.', err);\n}\n\n/*\n* phantomjs version 1.8.1 and later should work.\n*\n* Create a PDF file out of an html string.\n*\n* Regions for the PDF page are:\n*\n* - Page Header  -> document.getElementById('pageHeader')\n* - Page Content -> document.getElementById('pageContent')\n* - Page Footer  -> document.getElementById('pageFooter')\n*\n* When no #pageContent is available, phantomjs will use document.body as pdf content\n*/\nmodule.exports = PDF;\nfunction PDF(html, options) {\n  this.html = html;\n  this.options = options || {};\n  if (this.options.script) {\n    this.script = path.normalize(this.options.script);\n  } else {\n    this.script = path.join(__dirname, 'scripts', 'pdf_a4_portrait.js');\n  }\n  if (this.options.filename) this.options.filename = path.resolve(this.options.filename);\n  if (!this.options.phantomPath) this.options.phantomPath = phantomjs && phantomjs.path;\n  this.options.phantomArgs = this.options.phantomArgs || [];\n  if (!this.options.localUrlAccess) this.options.phantomArgs.push('--local-url-access=false');\n  assert(this.options.phantomPath, \"html-pdf: Failed to load PhantomJS module. You have to set the path to the PhantomJS binary using 'options.phantomPath'\");\n  assert(typeof this.html === 'string' && this.html.length, \"html-pdf: Can't create a pdf without an html string\");\n  this.options.timeout = parseInt(this.options.timeout, 10) || 30000;\n}\nPDF.prototype.toBuffer = function PdfToBuffer(callback) {\n  this.exec(function execPdfToBuffer(err, res) {\n    if (err) return callback(err);\n    fs.readFile(res.filename, function readCallback(err, buffer) {\n      if (err) return callback(err);\n      fs.unlink(res.filename, function unlinkPdfFile(err) {\n        if (err) return callback(err);\n        callback(null, buffer);\n      });\n    });\n  });\n};\nPDF.prototype.toStream = function PdfToStream(callback) {\n  this.exec(function (err, res) {\n    if (err) return callback(err);\n    try {\n      var stream = fs.createReadStream(res.filename);\n    } catch (err) {\n      return callback(err);\n    }\n    stream.on('end', function () {\n      fs.unlink(res.filename, function unlinkPdfFile(err) {\n        if (err) console.log('html-pdf:', err);\n      });\n    });\n    callback(null, stream);\n  });\n};\nPDF.prototype.toFile = function PdfToFile(filename, callback) {\n  assert(arguments.length > 0, 'html-pdf: The method .toFile([filename, ]callback) requires a callback.');\n  if (filename instanceof Function) {\n    callback = filename;\n    filename = undefined;\n  } else {\n    this.options.filename = path.resolve(filename);\n  }\n  this.exec(callback);\n};\nPDF.prototype.exec = function PdfExec(callback) {\n  var child = childprocess.spawn(this.options.phantomPath, [].concat(this.options.phantomArgs, [this.script]), this.options.childProcessOptions);\n  var stderr = [];\n  var timeout = setTimeout(function execTimeout() {\n    respond(null, new Error('html-pdf: PDF generation timeout. Phantom.js script did not exit.'));\n  }, this.options.timeout);\n  function onError(buffer) {\n    stderr.push(buffer);\n  }\n  function onData(buffer) {\n    var result;\n    try {\n      var json = buffer.toString().trim();\n      if (json) result = JSON.parse(json);\n    } catch (err) {\n      // Proxy for debugging purposes\n      process.stdout.write(buffer);\n    }\n    if (result) respond(null, null, result);\n  }\n  var callbacked = false;\n  function respond(code, err, data) {\n    if (callbacked) return;\n    callbacked = true;\n    clearTimeout(timeout);\n\n    // If we don't have an exit code, we kill the process, ignore stderr after this point\n    if (code === null) kill(child, onData, onError);\n\n    // Since code has a truthy/falsy value of either 0 or 1, check for existence first.\n    // Ignore if code has a value of 0 since that means PhantomJS has executed and exited successfully.\n    // Also, as per your script and standards, having a code value of 1 means one can always assume that\n    // an error occured.\n    if (typeof code !== 'undefined' && code !== null && code !== 0 || err) {\n      var error = null;\n      if (err) {\n        // Rudimentary checking if err is an instance of the Error class\n        error = err instanceof Error ? err : new Error(err);\n      } else {\n        // This is to catch the edge case of having a exit code value of 1 but having no error\n        error = new Error('html-pdf: Unknown Error');\n      }\n\n      // Append anything caught from the stderr\n      var postfix = stderr.length ? '\\n' + Buffer.concat(stderr).toString() : '';\n      if (postfix) error.message += postfix;\n      return callback(error);\n    }\n    callback(null, data);\n  }\n  child.stdout.on('data', onData);\n  child.stderr.on('data', onError);\n  child.on('error', function onError(err) {\n    respond(null, err);\n  });\n\n  // An exit event is most likely an error because we didn't get any data at this point\n  child.on('close', respond);\n  child.on('exit', respond);\n  var config = JSON.stringify({\n    html: this.html,\n    options: this.options\n  });\n  child.stdin.write(config + '\\n', 'utf8');\n  child.stdin.end();\n};\nfunction kill(child, onData, onError) {\n  child.stdin.end();\n  child.kill();\n}","map":{"version":3,"names":["fs","require","childprocess","path","assert","phantomjs","err","console","log","module","exports","PDF","html","options","script","normalize","join","__dirname","filename","resolve","phantomPath","phantomArgs","localUrlAccess","push","length","timeout","parseInt","prototype","toBuffer","PdfToBuffer","callback","exec","execPdfToBuffer","res","readFile","readCallback","buffer","unlink","unlinkPdfFile","toStream","PdfToStream","stream","createReadStream","on","toFile","PdfToFile","arguments","Function","undefined","PdfExec","child","spawn","concat","childProcessOptions","stderr","setTimeout","execTimeout","respond","Error","onError","onData","result","json","toString","trim","JSON","parse","process","stdout","write","callbacked","code","data","clearTimeout","kill","error","postfix","Buffer","message","config","stringify","stdin","end"],"sources":["/Users/jeffreyvanoosterwijk/Desktop/repos/resume-generator/node_modules/html-pdf/lib/pdf.js"],"sourcesContent":["var fs = require('fs')\nvar childprocess = require('child_process')\nvar path = require('path')\nvar assert = require('assert')\n\ntry {\n  var phantomjs = require('phantomjs-prebuilt')\n} catch (err) {\n  console.log('html-pdf: Failed to load PhantomJS module.', err)\n}\n\n/*\n* phantomjs version 1.8.1 and later should work.\n*\n* Create a PDF file out of an html string.\n*\n* Regions for the PDF page are:\n*\n* - Page Header  -> document.getElementById('pageHeader')\n* - Page Content -> document.getElementById('pageContent')\n* - Page Footer  -> document.getElementById('pageFooter')\n*\n* When no #pageContent is available, phantomjs will use document.body as pdf content\n*/\nmodule.exports = PDF\nfunction PDF (html, options) {\n  this.html = html\n  this.options = options || {}\n  if (this.options.script) {\n    this.script = path.normalize(this.options.script)\n  } else {\n    this.script = path.join(__dirname, 'scripts', 'pdf_a4_portrait.js')\n  }\n\n  if (this.options.filename) this.options.filename = path.resolve(this.options.filename)\n  if (!this.options.phantomPath) this.options.phantomPath = phantomjs && phantomjs.path\n  this.options.phantomArgs = this.options.phantomArgs || []\n\n  if (!this.options.localUrlAccess) this.options.phantomArgs.push('--local-url-access=false')\n  assert(this.options.phantomPath, \"html-pdf: Failed to load PhantomJS module. You have to set the path to the PhantomJS binary using 'options.phantomPath'\")\n  assert(typeof this.html === 'string' && this.html.length, \"html-pdf: Can't create a pdf without an html string\")\n  this.options.timeout = parseInt(this.options.timeout, 10) || 30000\n}\n\nPDF.prototype.toBuffer = function PdfToBuffer (callback) {\n  this.exec(function execPdfToBuffer (err, res) {\n    if (err) return callback(err)\n    fs.readFile(res.filename, function readCallback (err, buffer) {\n      if (err) return callback(err)\n      fs.unlink(res.filename, function unlinkPdfFile (err) {\n        if (err) return callback(err)\n        callback(null, buffer)\n      })\n    })\n  })\n}\n\nPDF.prototype.toStream = function PdfToStream (callback) {\n  this.exec(function (err, res) {\n    if (err) return callback(err)\n    try {\n      var stream = fs.createReadStream(res.filename)\n    } catch (err) {\n      return callback(err)\n    }\n\n    stream.on('end', function () {\n      fs.unlink(res.filename, function unlinkPdfFile (err) {\n        if (err) console.log('html-pdf:', err)\n      })\n    })\n\n    callback(null, stream)\n  })\n}\n\nPDF.prototype.toFile = function PdfToFile (filename, callback) {\n  assert(arguments.length > 0, 'html-pdf: The method .toFile([filename, ]callback) requires a callback.')\n  if (filename instanceof Function) {\n    callback = filename\n    filename = undefined\n  } else {\n    this.options.filename = path.resolve(filename)\n  }\n  this.exec(callback)\n}\n\nPDF.prototype.exec = function PdfExec (callback) {\n  var child = childprocess.spawn(this.options.phantomPath, [].concat(this.options.phantomArgs, [this.script]), this.options.childProcessOptions)\n  var stderr = []\n\n  var timeout = setTimeout(function execTimeout () {\n    respond(null, new Error('html-pdf: PDF generation timeout. Phantom.js script did not exit.'))\n  }, this.options.timeout)\n\n  function onError (buffer) {\n    stderr.push(buffer)\n  }\n\n  function onData (buffer) {\n    var result\n    try {\n      var json = buffer.toString().trim()\n      if (json) result = JSON.parse(json)\n    } catch (err) {\n      // Proxy for debugging purposes\n      process.stdout.write(buffer)\n    }\n\n    if (result) respond(null, null, result)\n  }\n\n  var callbacked = false\n  function respond (code, err, data) {\n    if (callbacked) return\n    callbacked = true\n    clearTimeout(timeout)\n\n    // If we don't have an exit code, we kill the process, ignore stderr after this point\n    if (code === null) kill(child, onData, onError)\n\n    // Since code has a truthy/falsy value of either 0 or 1, check for existence first.\n    // Ignore if code has a value of 0 since that means PhantomJS has executed and exited successfully.\n    // Also, as per your script and standards, having a code value of 1 means one can always assume that\n    // an error occured.\n    if (((typeof code !== 'undefined' && code !== null) && code !== 0) || err) {\n      var error = null\n\n      if (err) {\n        // Rudimentary checking if err is an instance of the Error class\n        error = err instanceof Error ? err : new Error(err)\n      } else {\n        // This is to catch the edge case of having a exit code value of 1 but having no error\n        error = new Error('html-pdf: Unknown Error')\n      }\n\n      // Append anything caught from the stderr\n      var postfix = stderr.length ? '\\n' + Buffer.concat(stderr).toString() : ''\n      if (postfix) error.message += postfix\n\n      return callback(error)\n    }\n\n    callback(null, data)\n  }\n\n  child.stdout.on('data', onData)\n  child.stderr.on('data', onError)\n  child.on('error', function onError (err) { respond(null, err) })\n\n  // An exit event is most likely an error because we didn't get any data at this point\n  child.on('close', respond)\n  child.on('exit', respond)\n\n  var config = JSON.stringify({html: this.html, options: this.options})\n  child.stdin.write(config + '\\n', 'utf8')\n  child.stdin.end()\n}\n\nfunction kill (child, onData, onError) {\n  child.stdin.end()\n  child.kill()\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}