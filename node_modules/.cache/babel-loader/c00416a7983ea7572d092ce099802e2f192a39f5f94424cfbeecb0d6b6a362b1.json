{"ast":null,"code":"var isWhiteSpace = require('../../tokenizer').isWhiteSpace;\nvar cmpStr = require('../../tokenizer').cmpStr;\nvar TYPE = require('../../tokenizer').TYPE;\nvar FUNCTION = TYPE.Function;\nvar URL = TYPE.Url;\nvar RIGHTPARENTHESIS = TYPE.RightParenthesis;\n\n// <url-token> | <function-token> <string> )\nmodule.exports = {\n  name: 'Url',\n  structure: {\n    value: ['String', 'Raw']\n  },\n  parse: function () {\n    var start = this.scanner.tokenStart;\n    var value;\n    switch (this.scanner.tokenType) {\n      case URL:\n        var rawStart = start + 4;\n        var rawEnd = this.scanner.tokenEnd - 1;\n        while (rawStart < rawEnd && isWhiteSpace(this.scanner.source.charCodeAt(rawStart))) {\n          rawStart++;\n        }\n        while (rawStart < rawEnd && isWhiteSpace(this.scanner.source.charCodeAt(rawEnd - 1))) {\n          rawEnd--;\n        }\n        value = {\n          type: 'Raw',\n          loc: this.getLocation(rawStart, rawEnd),\n          value: this.scanner.source.substring(rawStart, rawEnd)\n        };\n        this.eat(URL);\n        break;\n      case FUNCTION:\n        if (!cmpStr(this.scanner.source, this.scanner.tokenStart, this.scanner.tokenEnd, 'url(')) {\n          this.error('Function name must be `url`');\n        }\n        this.eat(FUNCTION);\n        this.scanner.skipSC();\n        value = this.String();\n        this.scanner.skipSC();\n        this.eat(RIGHTPARENTHESIS);\n        break;\n      default:\n        this.error('Url or Function is expected');\n    }\n    return {\n      type: 'Url',\n      loc: this.getLocation(start, this.scanner.tokenStart),\n      value: value\n    };\n  },\n  generate: function (node) {\n    this.chunk('url');\n    this.chunk('(');\n    this.node(node.value);\n    this.chunk(')');\n  }\n};","map":{"version":3,"names":["isWhiteSpace","require","cmpStr","TYPE","FUNCTION","Function","URL","Url","RIGHTPARENTHESIS","RightParenthesis","module","exports","name","structure","value","parse","start","scanner","tokenStart","tokenType","rawStart","rawEnd","tokenEnd","source","charCodeAt","type","loc","getLocation","substring","eat","error","skipSC","String","generate","node","chunk"],"sources":["/Users/jeffreyvanoosterwijk/Desktop/repos/resume-generator/node_modules/react-pdf-html/node_modules/css-tree/lib/syntax/node/Url.js"],"sourcesContent":["var isWhiteSpace = require('../../tokenizer').isWhiteSpace;\nvar cmpStr = require('../../tokenizer').cmpStr;\nvar TYPE = require('../../tokenizer').TYPE;\n\nvar FUNCTION = TYPE.Function;\nvar URL = TYPE.Url;\nvar RIGHTPARENTHESIS = TYPE.RightParenthesis;\n\n// <url-token> | <function-token> <string> )\nmodule.exports = {\n    name: 'Url',\n    structure: {\n        value: ['String', 'Raw']\n    },\n    parse: function() {\n        var start = this.scanner.tokenStart;\n        var value;\n\n        switch (this.scanner.tokenType) {\n            case URL:\n                var rawStart = start + 4;\n                var rawEnd = this.scanner.tokenEnd - 1;\n\n                while (rawStart < rawEnd && isWhiteSpace(this.scanner.source.charCodeAt(rawStart))) {\n                    rawStart++;\n                }\n\n                while (rawStart < rawEnd && isWhiteSpace(this.scanner.source.charCodeAt(rawEnd - 1))) {\n                    rawEnd--;\n                }\n\n                value = {\n                    type: 'Raw',\n                    loc: this.getLocation(rawStart, rawEnd),\n                    value: this.scanner.source.substring(rawStart, rawEnd)\n                };\n\n                this.eat(URL);\n                break;\n\n            case FUNCTION:\n                if (!cmpStr(this.scanner.source, this.scanner.tokenStart, this.scanner.tokenEnd, 'url(')) {\n                    this.error('Function name must be `url`');\n                }\n\n                this.eat(FUNCTION);\n                this.scanner.skipSC();\n                value = this.String();\n                this.scanner.skipSC();\n                this.eat(RIGHTPARENTHESIS);\n                break;\n\n            default:\n                this.error('Url or Function is expected');\n        }\n\n        return {\n            type: 'Url',\n            loc: this.getLocation(start, this.scanner.tokenStart),\n            value: value\n        };\n    },\n    generate: function(node) {\n        this.chunk('url');\n        this.chunk('(');\n        this.node(node.value);\n        this.chunk(')');\n    }\n};\n"],"mappings":"AAAA,IAAIA,YAAY,GAAGC,OAAO,CAAC,iBAAiB,CAAC,CAACD,YAAY;AAC1D,IAAIE,MAAM,GAAGD,OAAO,CAAC,iBAAiB,CAAC,CAACC,MAAM;AAC9C,IAAIC,IAAI,GAAGF,OAAO,CAAC,iBAAiB,CAAC,CAACE,IAAI;AAE1C,IAAIC,QAAQ,GAAGD,IAAI,CAACE,QAAQ;AAC5B,IAAIC,GAAG,GAAGH,IAAI,CAACI,GAAG;AAClB,IAAIC,gBAAgB,GAAGL,IAAI,CAACM,gBAAgB;;AAE5C;AACAC,MAAM,CAACC,OAAO,GAAG;EACbC,IAAI,EAAE,KAAK;EACXC,SAAS,EAAE;IACPC,KAAK,EAAE,CAAC,QAAQ,EAAE,KAAK;EAC3B,CAAC;EACDC,KAAK,EAAE,SAAAA,CAAA,EAAW;IACd,IAAIC,KAAK,GAAG,IAAI,CAACC,OAAO,CAACC,UAAU;IACnC,IAAIJ,KAAK;IAET,QAAQ,IAAI,CAACG,OAAO,CAACE,SAAS;MAC1B,KAAKb,GAAG;QACJ,IAAIc,QAAQ,GAAGJ,KAAK,GAAG,CAAC;QACxB,IAAIK,MAAM,GAAG,IAAI,CAACJ,OAAO,CAACK,QAAQ,GAAG,CAAC;QAEtC,OAAOF,QAAQ,GAAGC,MAAM,IAAIrB,YAAY,CAAC,IAAI,CAACiB,OAAO,CAACM,MAAM,CAACC,UAAU,CAACJ,QAAQ,CAAC,CAAC,EAAE;UAChFA,QAAQ,EAAE;QACd;QAEA,OAAOA,QAAQ,GAAGC,MAAM,IAAIrB,YAAY,CAAC,IAAI,CAACiB,OAAO,CAACM,MAAM,CAACC,UAAU,CAACH,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE;UAClFA,MAAM,EAAE;QACZ;QAEAP,KAAK,GAAG;UACJW,IAAI,EAAE,KAAK;UACXC,GAAG,EAAE,IAAI,CAACC,WAAW,CAACP,QAAQ,EAAEC,MAAM,CAAC;UACvCP,KAAK,EAAE,IAAI,CAACG,OAAO,CAACM,MAAM,CAACK,SAAS,CAACR,QAAQ,EAAEC,MAAM;QACzD,CAAC;QAED,IAAI,CAACQ,GAAG,CAACvB,GAAG,CAAC;QACb;MAEJ,KAAKF,QAAQ;QACT,IAAI,CAACF,MAAM,CAAC,IAAI,CAACe,OAAO,CAACM,MAAM,EAAE,IAAI,CAACN,OAAO,CAACC,UAAU,EAAE,IAAI,CAACD,OAAO,CAACK,QAAQ,EAAE,MAAM,CAAC,EAAE;UACtF,IAAI,CAACQ,KAAK,CAAC,6BAA6B,CAAC;QAC7C;QAEA,IAAI,CAACD,GAAG,CAACzB,QAAQ,CAAC;QAClB,IAAI,CAACa,OAAO,CAACc,MAAM,CAAC,CAAC;QACrBjB,KAAK,GAAG,IAAI,CAACkB,MAAM,CAAC,CAAC;QACrB,IAAI,CAACf,OAAO,CAACc,MAAM,CAAC,CAAC;QACrB,IAAI,CAACF,GAAG,CAACrB,gBAAgB,CAAC;QAC1B;MAEJ;QACI,IAAI,CAACsB,KAAK,CAAC,6BAA6B,CAAC;IACjD;IAEA,OAAO;MACHL,IAAI,EAAE,KAAK;MACXC,GAAG,EAAE,IAAI,CAACC,WAAW,CAACX,KAAK,EAAE,IAAI,CAACC,OAAO,CAACC,UAAU,CAAC;MACrDJ,KAAK,EAAEA;IACX,CAAC;EACL,CAAC;EACDmB,QAAQ,EAAE,SAAAA,CAASC,IAAI,EAAE;IACrB,IAAI,CAACC,KAAK,CAAC,KAAK,CAAC;IACjB,IAAI,CAACA,KAAK,CAAC,GAAG,CAAC;IACf,IAAI,CAACD,IAAI,CAACA,IAAI,CAACpB,KAAK,CAAC;IACrB,IAAI,CAACqB,KAAK,CAAC,GAAG,CAAC;EACnB;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}