{"ast":null,"code":"var TYPE = require('../../tokenizer').TYPE;\nvar rawMode = require('./Raw').mode;\nvar WHITESPACE = TYPE.WhiteSpace;\nvar COMMENT = TYPE.Comment;\nvar SEMICOLON = TYPE.Semicolon;\nfunction consumeRaw(startToken) {\n  return this.Raw(startToken, rawMode.semicolonIncluded, true);\n}\nmodule.exports = {\n  name: 'DeclarationList',\n  structure: {\n    children: [['Declaration']]\n  },\n  parse: function () {\n    var children = this.createList();\n    scan: while (!this.scanner.eof) {\n      switch (this.scanner.tokenType) {\n        case WHITESPACE:\n        case COMMENT:\n        case SEMICOLON:\n          this.scanner.next();\n          break;\n        default:\n          children.push(this.parseWithFallback(this.Declaration, consumeRaw));\n      }\n    }\n    return {\n      type: 'DeclarationList',\n      loc: this.getLocationFromList(children),\n      children: children\n    };\n  },\n  generate: function (node) {\n    this.children(node, function (prev) {\n      if (prev.type === 'Declaration') {\n        this.chunk(';');\n      }\n    });\n  }\n};","map":{"version":3,"names":["TYPE","require","rawMode","mode","WHITESPACE","WhiteSpace","COMMENT","Comment","SEMICOLON","Semicolon","consumeRaw","startToken","Raw","semicolonIncluded","module","exports","name","structure","children","parse","createList","scan","scanner","eof","tokenType","next","push","parseWithFallback","Declaration","type","loc","getLocationFromList","generate","node","prev","chunk"],"sources":["/Users/jeffreyvanoosterwijk/Desktop/repos/resume-generator/node_modules/react-pdf-html/node_modules/css-tree/lib/syntax/node/DeclarationList.js"],"sourcesContent":["var TYPE = require('../../tokenizer').TYPE;\nvar rawMode = require('./Raw').mode;\n\nvar WHITESPACE = TYPE.WhiteSpace;\nvar COMMENT = TYPE.Comment;\nvar SEMICOLON = TYPE.Semicolon;\n\nfunction consumeRaw(startToken) {\n    return this.Raw(startToken, rawMode.semicolonIncluded, true);\n}\n\nmodule.exports = {\n    name: 'DeclarationList',\n    structure: {\n        children: [[\n            'Declaration'\n        ]]\n    },\n    parse: function() {\n        var children = this.createList();\n\n        scan:\n        while (!this.scanner.eof) {\n            switch (this.scanner.tokenType) {\n                case WHITESPACE:\n                case COMMENT:\n                case SEMICOLON:\n                    this.scanner.next();\n                    break;\n\n                default:\n                    children.push(this.parseWithFallback(this.Declaration, consumeRaw));\n            }\n        }\n\n        return {\n            type: 'DeclarationList',\n            loc: this.getLocationFromList(children),\n            children: children\n        };\n    },\n    generate: function(node) {\n        this.children(node, function(prev) {\n            if (prev.type === 'Declaration') {\n                this.chunk(';');\n            }\n        });\n    }\n};\n"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,iBAAiB,CAAC,CAACD,IAAI;AAC1C,IAAIE,OAAO,GAAGD,OAAO,CAAC,OAAO,CAAC,CAACE,IAAI;AAEnC,IAAIC,UAAU,GAAGJ,IAAI,CAACK,UAAU;AAChC,IAAIC,OAAO,GAAGN,IAAI,CAACO,OAAO;AAC1B,IAAIC,SAAS,GAAGR,IAAI,CAACS,SAAS;AAE9B,SAASC,UAAUA,CAACC,UAAU,EAAE;EAC5B,OAAO,IAAI,CAACC,GAAG,CAACD,UAAU,EAAET,OAAO,CAACW,iBAAiB,EAAE,IAAI,CAAC;AAChE;AAEAC,MAAM,CAACC,OAAO,GAAG;EACbC,IAAI,EAAE,iBAAiB;EACvBC,SAAS,EAAE;IACPC,QAAQ,EAAE,CAAC,CACP,aAAa,CAChB;EACL,CAAC;EACDC,KAAK,EAAE,SAAAA,CAAA,EAAW;IACd,IAAID,QAAQ,GAAG,IAAI,CAACE,UAAU,CAAC,CAAC;IAEhCC,IAAI,EACJ,OAAO,CAAC,IAAI,CAACC,OAAO,CAACC,GAAG,EAAE;MACtB,QAAQ,IAAI,CAACD,OAAO,CAACE,SAAS;QAC1B,KAAKpB,UAAU;QACf,KAAKE,OAAO;QACZ,KAAKE,SAAS;UACV,IAAI,CAACc,OAAO,CAACG,IAAI,CAAC,CAAC;UACnB;QAEJ;UACIP,QAAQ,CAACQ,IAAI,CAAC,IAAI,CAACC,iBAAiB,CAAC,IAAI,CAACC,WAAW,EAAElB,UAAU,CAAC,CAAC;MAC3E;IACJ;IAEA,OAAO;MACHmB,IAAI,EAAE,iBAAiB;MACvBC,GAAG,EAAE,IAAI,CAACC,mBAAmB,CAACb,QAAQ,CAAC;MACvCA,QAAQ,EAAEA;IACd,CAAC;EACL,CAAC;EACDc,QAAQ,EAAE,SAAAA,CAASC,IAAI,EAAE;IACrB,IAAI,CAACf,QAAQ,CAACe,IAAI,EAAE,UAASC,IAAI,EAAE;MAC/B,IAAIA,IAAI,CAACL,IAAI,KAAK,aAAa,EAAE;QAC7B,IAAI,CAACM,KAAK,CAAC,GAAG,CAAC;MACnB;IACJ,CAAC,CAAC;EACN;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}