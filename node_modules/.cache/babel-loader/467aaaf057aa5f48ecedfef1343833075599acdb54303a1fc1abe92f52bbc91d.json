{"ast":null,"code":"const hasOwnProperty = Object.prototype.hasOwnProperty;\nconst shape = {\n  generic: true,\n  types: appendOrAssign,\n  atrules: {\n    prelude: appendOrAssignOrNull,\n    descriptors: appendOrAssignOrNull\n  },\n  properties: appendOrAssign,\n  parseContext: assign,\n  scope: deepAssign,\n  atrule: ['parse'],\n  pseudo: ['parse'],\n  node: ['name', 'structure', 'parse', 'generate', 'walkContext']\n};\nfunction isObject(value) {\n  return value && value.constructor === Object;\n}\nfunction copy(value) {\n  return isObject(value) ? Object.assign({}, value) : value;\n}\nfunction assign(dest, src) {\n  return Object.assign(dest, src);\n}\nfunction deepAssign(dest, src) {\n  for (const key in src) {\n    if (hasOwnProperty.call(src, key)) {\n      if (isObject(dest[key])) {\n        deepAssign(dest[key], copy(src[key]));\n      } else {\n        dest[key] = copy(src[key]);\n      }\n    }\n  }\n  return dest;\n}\nfunction append(a, b) {\n  if (typeof b === 'string' && /^\\s*\\|/.test(b)) {\n    return typeof a === 'string' ? a + b : b.replace(/^\\s*\\|\\s*/, '');\n  }\n  return b || null;\n}\nfunction appendOrAssign(a, b) {\n  if (typeof b === 'string') {\n    return append(a, b);\n  }\n  const result = Object.assign({}, a);\n  for (let key in b) {\n    if (hasOwnProperty.call(b, key)) {\n      result[key] = append(hasOwnProperty.call(a, key) ? a[key] : undefined, b[key]);\n    }\n  }\n  return result;\n}\nfunction appendOrAssignOrNull(a, b) {\n  const result = appendOrAssign(a, b);\n  return !isObject(result) || Object.keys(result).length ? result : null;\n}\nfunction mix(dest, src, shape) {\n  for (const key in shape) {\n    if (hasOwnProperty.call(shape, key) === false) {\n      continue;\n    }\n    if (shape[key] === true) {\n      if (key in src) {\n        if (hasOwnProperty.call(src, key)) {\n          dest[key] = copy(src[key]);\n        }\n      }\n    } else if (shape[key]) {\n      if (typeof shape[key] === 'function') {\n        const fn = shape[key];\n        dest[key] = fn({}, dest[key]);\n        dest[key] = fn(dest[key] || {}, src[key]);\n      } else if (isObject(shape[key])) {\n        const result = {};\n        for (let name in dest[key]) {\n          result[name] = mix({}, dest[key][name], shape[key]);\n        }\n        for (let name in src[key]) {\n          result[name] = mix(result[name] || {}, src[key][name], shape[key]);\n        }\n        dest[key] = result;\n      } else if (Array.isArray(shape[key])) {\n        const res = {};\n        const innerShape = shape[key].reduce(function (s, k) {\n          s[k] = true;\n          return s;\n        }, {});\n        for (const [name, value] of Object.entries(dest[key] || {})) {\n          res[name] = {};\n          if (value) {\n            mix(res[name], value, innerShape);\n          }\n        }\n        for (const name in src[key]) {\n          if (hasOwnProperty.call(src[key], name)) {\n            if (!res[name]) {\n              res[name] = {};\n            }\n            if (src[key] && src[key][name]) {\n              mix(res[name], src[key][name], innerShape);\n            }\n          }\n        }\n        dest[key] = res;\n      }\n    }\n  }\n  return dest;\n}\nmodule.exports = (dest, src) => mix(dest, src, shape);","map":{"version":3,"names":["hasOwnProperty","Object","prototype","shape","generic","types","appendOrAssign","atrules","prelude","appendOrAssignOrNull","descriptors","properties","parseContext","assign","scope","deepAssign","atrule","pseudo","node","isObject","value","constructor","copy","dest","src","key","call","append","a","b","test","replace","result","undefined","keys","length","mix","fn","name","Array","isArray","res","innerShape","reduce","s","k","entries","module","exports"],"sources":["/Users/jeffreyvanoosterwijk/Desktop/repos/resume-generator/node_modules/react-pdf-html/node_modules/css-tree/lib/syntax/config/mix.js"],"sourcesContent":["const hasOwnProperty = Object.prototype.hasOwnProperty;\nconst shape = {\n    generic: true,\n    types: appendOrAssign,\n    atrules: {\n        prelude: appendOrAssignOrNull,\n        descriptors: appendOrAssignOrNull\n    },\n    properties: appendOrAssign,\n    parseContext: assign,\n    scope: deepAssign,\n    atrule: ['parse'],\n    pseudo: ['parse'],\n    node: ['name', 'structure', 'parse', 'generate', 'walkContext']\n};\n\nfunction isObject(value) {\n    return value && value.constructor === Object;\n}\n\nfunction copy(value) {\n    return isObject(value)\n        ? Object.assign({}, value)\n        : value;\n}\n\nfunction assign(dest, src) {\n    return Object.assign(dest, src);\n}\n\nfunction deepAssign(dest, src) {\n    for (const key in src) {\n        if (hasOwnProperty.call(src, key)) {\n            if (isObject(dest[key])) {\n                deepAssign(dest[key], copy(src[key]));\n            } else {\n                dest[key] = copy(src[key]);\n            }\n        }\n    }\n\n    return dest;\n}\n\nfunction append(a, b) {\n    if (typeof b === 'string' && /^\\s*\\|/.test(b)) {\n        return typeof a === 'string'\n            ? a + b\n            : b.replace(/^\\s*\\|\\s*/, '');\n    }\n\n    return b || null;\n}\n\nfunction appendOrAssign(a, b) {\n    if (typeof b === 'string') {\n        return append(a, b);\n    }\n\n    const result = Object.assign({}, a);\n    for (let key in b) {\n        if (hasOwnProperty.call(b, key)) {\n            result[key] = append(hasOwnProperty.call(a, key) ? a[key] : undefined, b[key]);\n        }\n    }\n\n    return result;\n}\n\nfunction appendOrAssignOrNull(a, b) {\n    const result = appendOrAssign(a, b);\n\n    return !isObject(result) || Object.keys(result).length\n        ? result\n        : null;\n}\n\nfunction mix(dest, src, shape) {\n    for (const key in shape) {\n        if (hasOwnProperty.call(shape, key) === false) {\n            continue;\n        }\n\n        if (shape[key] === true) {\n            if (key in src) {\n                if (hasOwnProperty.call(src, key)) {\n                    dest[key] = copy(src[key]);\n                }\n            }\n        } else if (shape[key]) {\n            if (typeof shape[key] === 'function') {\n                const fn = shape[key];\n                dest[key] = fn({}, dest[key]);\n                dest[key] = fn(dest[key] || {}, src[key]);\n            } else if (isObject(shape[key])) {\n                const result = {};\n\n                for (let name in dest[key]) {\n                    result[name] = mix({}, dest[key][name], shape[key]);\n                }\n\n                for (let name in src[key]) {\n                    result[name] = mix(result[name] || {}, src[key][name], shape[key]);\n                }\n\n                dest[key] = result;\n            } else if (Array.isArray(shape[key])) {\n                const res = {};\n                const innerShape = shape[key].reduce(function(s, k) {\n                    s[k] = true;\n                    return s;\n                }, {});\n\n                for (const [name, value] of Object.entries(dest[key] || {})) {\n                    res[name] = {};\n                    if (value) {\n                        mix(res[name], value, innerShape);\n                    }\n                }\n\n                for (const name in src[key]) {\n                    if (hasOwnProperty.call(src[key], name)) {\n                        if (!res[name]) {\n                            res[name] = {};\n                        }\n\n                        if (src[key] && src[key][name]) {\n                            mix(res[name], src[key][name], innerShape);\n                        }\n                    }\n                }\n\n                dest[key] = res;\n            }\n        }\n    }\n    return dest;\n}\n\nmodule.exports = (dest, src) => mix(dest, src, shape);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}