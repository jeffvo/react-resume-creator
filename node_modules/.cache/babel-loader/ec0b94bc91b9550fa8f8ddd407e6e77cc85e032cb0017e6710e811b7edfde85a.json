{"ast":null,"code":"/* eslint-env browser */\n\nconst textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nfunction syncFetch(...args) {\n  const request = new syncFetch.Request(...args);\n  const xhr = new XMLHttpRequest();\n  xhr.withCredentials = request.credentials === 'include';\n  xhr.timeout = request[INTERNALS].timeout;\n\n  // Request\n  xhr.open(request.method, request.url, false);\n  let useBinaryEncoding = false;\n  try {\n    // Only allowed in Worker scope, not available in older browsers\n    // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseType#Synchronous_XHR_restrictions\n    xhr.responseType = 'arraybuffer';\n  } catch (e) {\n    // Not in Worker scope; instead, attempt this alternative method\n    // https://web.archive.org/web/20071103070418/http://mgran.blogspot.com/2006/08/downloading-binary-streams-with.html\n    xhr.overrideMimeType('text/plain; charset=x-user-defined');\n    useBinaryEncoding = true;\n  }\n  for (const header of request.headers) {\n    xhr.setRequestHeader(...header);\n  }\n  xhr.send(request[INTERNALS].body || null);\n\n  // Response\n  let headers = xhr.getAllResponseHeaders();\n  headers = headers && headers.split('\\r\\n').filter(Boolean).map(header => header.split(': ', 2));\n  let body = xhr.response;\n  if (useBinaryEncoding) {\n    const buffer = new Uint8Array(body.length);\n    for (let i = 0; i < body.length; i++) {\n      buffer[i] = body.charCodeAt(i) & 0xff;\n    }\n    body = buffer;\n  }\n  const response = new syncFetch.Response(body, {\n    headers,\n    status: xhr.status,\n    statusText: xhr.statusText\n  });\n  response[INTERNALS].url = xhr.responseURL;\n  response[INTERNALS].redirected = xhr.responseURL !== request.url;\n  return response;\n}\nconst INTERNALS = Symbol('SyncFetch Internals');\nconst REQ_UNSUPPORTED = ['mode', 'cache', 'redirect', 'referrer', 'integrity'];\nconst HTTP_STATUS = {\n  100: 'Continue',\n  101: 'Switching Protocols',\n  200: 'OK',\n  201: 'Created',\n  202: 'Accepted',\n  203: 'Non-Authoritative Information',\n  204: 'No Content',\n  205: 'Reset Content',\n  206: 'Partial Content',\n  300: 'Multiple Choices',\n  301: 'Moved Permanently',\n  302: 'Found',\n  303: 'See Other',\n  304: 'Not Modified',\n  305: 'Use Proxy',\n  307: 'Temporary Redirect',\n  400: 'Bad Request',\n  401: 'Unauthorized',\n  402: 'Payment Required',\n  403: 'Forbidden',\n  404: 'Not Found',\n  405: 'Method Not Allowed',\n  406: 'Not Acceptable',\n  407: 'Proxy Authentication Required',\n  408: 'Request Timeout',\n  409: 'Conflict',\n  410: 'Gone',\n  411: 'Length Required',\n  412: 'Precondition Failed',\n  413: 'Payload Too Large',\n  414: 'URI Too Long',\n  415: 'Unsupported Media Type',\n  416: 'Range Not Satisfiable',\n  417: 'Expectation Failed',\n  426: 'Upgrade Required',\n  500: 'Internal Server Error',\n  501: 'Not Implemented',\n  502: 'Bad Gateway',\n  503: 'Service Unavailable',\n  504: 'Gateway Timeout',\n  505: 'HTTP Version Not Supported'\n};\nclass SyncRequest {\n  constructor(resource, init = {}) {\n    for (const option of REQ_UNSUPPORTED) {\n      if (option in init) {\n        throw new TypeError(`option ${option} not supported`);\n      }\n    }\n    if (init.credentials === 'same-origin') {\n      throw new TypeError('option credentials with value \\'same-origin\\' not supported');\n    }\n    this[INTERNALS] = {\n      method: init.method || 'GET',\n      headers: new syncFetch.Headers(init.headers),\n      body: parseBody(init.body),\n      credentials: init.credentials || 'omit',\n      // Non-spec\n      timeout: init.timeout || 0\n    };\n    if (typeof resource === 'string') {\n      this[INTERNALS].url = resource;\n    } else if (resource instanceof SyncRequest) {\n      this[INTERNALS].url = resource.url;\n      if (!init.method) {\n        this[INTERNALS].method = resource.method;\n      }\n      if (!init.headers) {\n        this[INTERNALS].headers = resource.headers;\n      }\n      if (!init.body) {\n        this[INTERNALS].body = resource[INTERNALS].body;\n      }\n      if (!init.credentials) {\n        this[INTERNALS].credentials = resource.credentials;\n      }\n    } else {\n      throw new TypeError('Request input should be a URL string or a Request object');\n    }\n  }\n  get cache() {\n    return 'default';\n  }\n  get credentials() {\n    return this[INTERNALS].credentials;\n  }\n  get destination() {\n    return '';\n  }\n  get headers() {\n    return this[INTERNALS].headers;\n  }\n  get integrity() {\n    return '';\n  }\n  get method() {\n    return this[INTERNALS].method;\n  }\n  get mode() {\n    return 'cors';\n  }\n  get priority() {\n    return 'auto';\n  }\n  get redirect() {\n    return 'follow';\n  }\n  get referrer() {\n    return 'about:client';\n  }\n  get referrerPolicy() {\n    return '';\n  }\n  get url() {\n    return this[INTERNALS].url;\n  }\n  clone() {\n    checkBody(this);\n    return new SyncRequest(this.url, this[INTERNALS]);\n  }\n}\nclass SyncResponse {\n  constructor(body, init = {}) {\n    this[INTERNALS] = {\n      body: parseBody(body),\n      bodyUsed: false,\n      headers: new syncFetch.Headers(init.headers),\n      status: init.status,\n      statusText: init.statusText\n    };\n  }\n  get headers() {\n    return this[INTERNALS].headers;\n  }\n  get ok() {\n    const status = this[INTERNALS].status;\n    return status >= 200 && status < 300;\n  }\n  get redirected() {\n    return this[INTERNALS].redirected;\n  }\n  get status() {\n    return this[INTERNALS].status;\n  }\n  get statusText() {\n    return this[INTERNALS].statusText;\n  }\n  get url() {\n    return this[INTERNALS].url;\n  }\n  clone() {\n    return this.redirect(this[INTERNALS].url, this[INTERNALS].status);\n  }\n  redirect(url, status) {\n    checkBody(this);\n    const response = new SyncResponse(this[INTERNALS].body, {\n      headers: this[INTERNALS].headers,\n      status: status || this[INTERNALS].status,\n      statusText: HTTP_STATUS[status] || this[INTERNALS].statusText\n    });\n    response[INTERNALS].url = url || this[INTERNALS].url;\n    response[INTERNALS].redirected = this[INTERNALS].redirected;\n    return response;\n  }\n}\nclass Body {\n  constructor(body) {\n    this[INTERNALS] = {\n      body: parseBody(body),\n      bodyUsed: false\n    };\n  }\n  get bodyUsed() {\n    return this[INTERNALS].bodyUsed;\n  }\n  static mixin(prototype) {\n    for (const name of Object.getOwnPropertyNames(Body.prototype)) {\n      if (name === 'constructor') {\n        continue;\n      }\n      const desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n      Object.defineProperty(prototype, name, {\n        ...desc,\n        enumerable: true\n      });\n    }\n  }\n  arrayBuffer() {\n    const buffer = consumeBody(this);\n    return buffer.buffer.slice(buffer.byteOffset, buffer.byteOffset + buffer.byteLength);\n  }\n  blob() {\n    const type = this.headers && this.headers.get('content-type');\n    return new Blob([consumeBody(this)], type && {\n      type\n    });\n  }\n  text() {\n    return textDecoder.decode(consumeBody(this));\n  }\n  json() {\n    try {\n      return JSON.parse(this.text());\n    } catch (err) {\n      throw new TypeError(`invalid json response body at ${this.url} reason: ${err.message}`, 'invalid-json');\n    }\n  }\n}\nfunction checkBody(body) {\n  if (body.bodyUsed) {\n    throw new TypeError(`body used already for: ${body.url}`);\n  }\n}\nfunction consumeBody(body) {\n  checkBody(body);\n  body[INTERNALS].bodyUsed = true;\n  return body[INTERNALS].body || new Uint8Array();\n}\nfunction parseBody(body) {\n  if (typeof body === 'string') {\n    return textEncoder.encode(body);\n  } else if (body) {\n    return body;\n  } else {\n    return null;\n  }\n}\nBody.mixin(SyncRequest.prototype);\nBody.mixin(SyncResponse.prototype);\nclass Headers {\n  constructor(headers) {\n    if (headers instanceof syncFetch.Headers) {\n      this[INTERNALS] = {\n        ...headers[INTERNALS]\n      };\n    } else {\n      this[INTERNALS] = {};\n      if (Array.isArray(headers)) {\n        for (const [name, value] of headers) {\n          this.append(name, value);\n        }\n      } else if (typeof headers === 'object') {\n        for (const name in headers) {\n          this.set(name, headers[name]);\n        }\n      }\n    }\n  }\n\n  // modification\n  append(name, value) {\n    name = name.toLowerCase();\n    if (!this[INTERNALS][name]) {\n      this[INTERNALS][name] = [];\n    }\n    this[INTERNALS][name].push(value);\n  }\n  delete(name) {\n    delete this[INTERNALS][name.toLowerCase()];\n  }\n  set(name, value) {\n    this[INTERNALS][name.toLowerCase()] = [value];\n  }\n\n  // access\n  entries() {\n    const pairs = [];\n    for (const name in this[INTERNALS]) {\n      for (const value of this[INTERNALS][name]) {\n        pairs.push([name, value]);\n      }\n    }\n    return pairs;\n  }\n  get(name) {\n    name = name.toLowerCase();\n    return name in this[INTERNALS] ? this[INTERNALS][name].join(', ') : null;\n  }\n  keys() {\n    return Object.keys(this[INTERNALS]);\n  }\n  has(name) {\n    return name.toLowerCase() in this[INTERNALS];\n  }\n  values() {\n    const values = [];\n    for (const name in this[INTERNALS]) {\n      for (const value of this[INTERNALS][name]) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  *[Symbol.iterator]() {\n    for (const name in this[INTERNALS]) {\n      for (const value of this[INTERNALS][name]) {\n        yield [name, value];\n      }\n    }\n  }\n}\nsyncFetch.Headers = Headers;\nsyncFetch.Request = SyncRequest;\nsyncFetch.Response = SyncResponse;\nmodule.exports = syncFetch;","map":{"version":3,"names":["textEncoder","TextEncoder","textDecoder","TextDecoder","syncFetch","args","request","Request","xhr","XMLHttpRequest","withCredentials","credentials","timeout","INTERNALS","open","method","url","useBinaryEncoding","responseType","e","overrideMimeType","header","headers","setRequestHeader","send","body","getAllResponseHeaders","split","filter","Boolean","map","response","buffer","Uint8Array","length","i","charCodeAt","Response","status","statusText","responseURL","redirected","Symbol","REQ_UNSUPPORTED","HTTP_STATUS","SyncRequest","constructor","resource","init","option","TypeError","Headers","parseBody","cache","destination","integrity","mode","priority","redirect","referrer","referrerPolicy","clone","checkBody","SyncResponse","bodyUsed","ok","Body","mixin","prototype","name","Object","getOwnPropertyNames","desc","getOwnPropertyDescriptor","defineProperty","enumerable","arrayBuffer","consumeBody","slice","byteOffset","byteLength","blob","type","get","Blob","text","decode","json","JSON","parse","err","message","encode","Array","isArray","value","append","set","toLowerCase","push","delete","entries","pairs","join","keys","has","values","iterator","module","exports"],"sources":["/Users/jeffreyvanoosterwijk/Desktop/repos/resume-generator/node_modules/sync-fetch/browser.js"],"sourcesContent":["/* eslint-env browser */\n\nconst textEncoder = new TextEncoder()\nconst textDecoder = new TextDecoder()\n\nfunction syncFetch (...args) {\n  const request = new syncFetch.Request(...args)\n\n  const xhr = new XMLHttpRequest()\n  xhr.withCredentials = request.credentials === 'include'\n  xhr.timeout = request[INTERNALS].timeout\n\n  // Request\n  xhr.open(request.method, request.url, false)\n\n  let useBinaryEncoding = false\n  try {\n    // Only allowed in Worker scope, not available in older browsers\n    // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseType#Synchronous_XHR_restrictions\n    xhr.responseType = 'arraybuffer'\n  } catch (e) {\n    // Not in Worker scope; instead, attempt this alternative method\n    // https://web.archive.org/web/20071103070418/http://mgran.blogspot.com/2006/08/downloading-binary-streams-with.html\n    xhr.overrideMimeType('text/plain; charset=x-user-defined')\n    useBinaryEncoding = true\n  }\n\n  for (const header of request.headers) {\n    xhr.setRequestHeader(...header)\n  }\n\n  xhr.send(request[INTERNALS].body || null)\n\n  // Response\n  let headers = xhr.getAllResponseHeaders()\n  headers = headers && headers.split('\\r\\n').filter(Boolean).map(header => header.split(': ', 2))\n\n  let body = xhr.response\n  if (useBinaryEncoding) {\n    const buffer = new Uint8Array(body.length)\n    for (let i = 0; i < body.length; i++) {\n      buffer[i] = body.charCodeAt(i) & 0xff\n    }\n    body = buffer\n  }\n\n  const response = new syncFetch.Response(body, {\n    headers,\n    status: xhr.status,\n    statusText: xhr.statusText\n  })\n\n  response[INTERNALS].url = xhr.responseURL\n  response[INTERNALS].redirected = xhr.responseURL !== request.url\n\n  return response\n}\n\nconst INTERNALS = Symbol('SyncFetch Internals')\nconst REQ_UNSUPPORTED = ['mode', 'cache', 'redirect', 'referrer', 'integrity']\nconst HTTP_STATUS = {\n  100: 'Continue',\n  101: 'Switching Protocols',\n  200: 'OK',\n  201: 'Created',\n  202: 'Accepted',\n  203: 'Non-Authoritative Information',\n  204: 'No Content',\n  205: 'Reset Content',\n  206: 'Partial Content',\n  300: 'Multiple Choices',\n  301: 'Moved Permanently',\n  302: 'Found',\n  303: 'See Other',\n  304: 'Not Modified',\n  305: 'Use Proxy',\n  307: 'Temporary Redirect',\n  400: 'Bad Request',\n  401: 'Unauthorized',\n  402: 'Payment Required',\n  403: 'Forbidden',\n  404: 'Not Found',\n  405: 'Method Not Allowed',\n  406: 'Not Acceptable',\n  407: 'Proxy Authentication Required',\n  408: 'Request Timeout',\n  409: 'Conflict',\n  410: 'Gone',\n  411: 'Length Required',\n  412: 'Precondition Failed',\n  413: 'Payload Too Large',\n  414: 'URI Too Long',\n  415: 'Unsupported Media Type',\n  416: 'Range Not Satisfiable',\n  417: 'Expectation Failed',\n  426: 'Upgrade Required',\n  500: 'Internal Server Error',\n  501: 'Not Implemented',\n  502: 'Bad Gateway',\n  503: 'Service Unavailable',\n  504: 'Gateway Timeout',\n  505: 'HTTP Version Not Supported'\n}\n\nclass SyncRequest {\n  constructor (resource, init = {}) {\n    for (const option of REQ_UNSUPPORTED) {\n      if (option in init) {\n        throw new TypeError(`option ${option} not supported`)\n      }\n    }\n\n    if (init.credentials === 'same-origin') {\n      throw new TypeError('option credentials with value \\'same-origin\\' not supported')\n    }\n\n    this[INTERNALS] = {\n      method: init.method || 'GET',\n      headers: new syncFetch.Headers(init.headers),\n      body: parseBody(init.body),\n      credentials: init.credentials || 'omit',\n\n      // Non-spec\n      timeout: init.timeout || 0\n    }\n\n    if (typeof resource === 'string') {\n      this[INTERNALS].url = resource\n    } else if (resource instanceof SyncRequest) {\n      this[INTERNALS].url = resource.url\n      if (!init.method) {\n        this[INTERNALS].method = resource.method\n      }\n      if (!init.headers) {\n        this[INTERNALS].headers = resource.headers\n      }\n      if (!init.body) {\n        this[INTERNALS].body = resource[INTERNALS].body\n      }\n      if (!init.credentials) {\n        this[INTERNALS].credentials = resource.credentials\n      }\n    } else {\n      throw new TypeError('Request input should be a URL string or a Request object')\n    }\n  }\n\n  get cache () {\n    return 'default'\n  }\n\n  get credentials () {\n    return this[INTERNALS].credentials\n  }\n\n  get destination () {\n    return ''\n  }\n\n  get headers () {\n    return this[INTERNALS].headers\n  }\n\n  get integrity () {\n    return ''\n  }\n\n  get method () {\n    return this[INTERNALS].method\n  }\n\n  get mode () {\n    return 'cors'\n  }\n\n  get priority () {\n    return 'auto'\n  }\n\n  get redirect () {\n    return 'follow'\n  }\n\n  get referrer () {\n    return 'about:client'\n  }\n\n  get referrerPolicy () {\n    return ''\n  }\n\n  get url () {\n    return this[INTERNALS].url\n  }\n\n  clone () {\n    checkBody(this)\n    return new SyncRequest(this.url, this[INTERNALS])\n  }\n}\n\nclass SyncResponse {\n  constructor (body, init = {}) {\n    this[INTERNALS] = {\n      body: parseBody(body),\n      bodyUsed: false,\n\n      headers: new syncFetch.Headers(init.headers),\n      status: init.status,\n      statusText: init.statusText\n    }\n  }\n\n  get headers () {\n    return this[INTERNALS].headers\n  }\n\n  get ok () {\n    const status = this[INTERNALS].status\n    return status >= 200 && status < 300\n  }\n\n  get redirected () {\n    return this[INTERNALS].redirected\n  }\n\n  get status () {\n    return this[INTERNALS].status\n  }\n\n  get statusText () {\n    return this[INTERNALS].statusText\n  }\n\n  get url () {\n    return this[INTERNALS].url\n  }\n\n  clone () {\n    return this.redirect(this[INTERNALS].url, this[INTERNALS].status)\n  }\n\n  redirect (url, status) {\n    checkBody(this)\n\n    const response = new SyncResponse(this[INTERNALS].body, {\n      headers: this[INTERNALS].headers,\n      status: status || this[INTERNALS].status,\n      statusText: HTTP_STATUS[status] || this[INTERNALS].statusText\n    })\n\n    response[INTERNALS].url = url || this[INTERNALS].url\n    response[INTERNALS].redirected = this[INTERNALS].redirected\n\n    return response\n  }\n}\n\nclass Body {\n  constructor (body) {\n    this[INTERNALS] = {\n      body: parseBody(body),\n      bodyUsed: false\n    }\n  }\n\n  get bodyUsed () {\n    return this[INTERNALS].bodyUsed\n  }\n\n  static mixin (prototype) {\n    for (const name of Object.getOwnPropertyNames(Body.prototype)) {\n      if (name === 'constructor') { continue }\n      const desc = Object.getOwnPropertyDescriptor(Body.prototype, name)\n      Object.defineProperty(prototype, name, { ...desc, enumerable: true })\n    }\n  }\n\n  arrayBuffer () {\n    const buffer = consumeBody(this)\n    return buffer.buffer.slice(buffer.byteOffset, buffer.byteOffset + buffer.byteLength)\n  }\n\n  blob () {\n    const type = this.headers && this.headers.get('content-type')\n    return new Blob([consumeBody(this)], type && { type })\n  }\n\n  text () {\n    return textDecoder.decode(consumeBody(this))\n  }\n\n  json () {\n    try {\n      return JSON.parse(this.text())\n    } catch (err) {\n      throw new TypeError(`invalid json response body at ${this.url} reason: ${err.message}`, 'invalid-json')\n    }\n  }\n}\n\nfunction checkBody (body) {\n  if (body.bodyUsed) {\n    throw new TypeError(`body used already for: ${body.url}`)\n  }\n}\n\nfunction consumeBody (body) {\n  checkBody(body)\n  body[INTERNALS].bodyUsed = true\n  return body[INTERNALS].body || new Uint8Array()\n}\n\nfunction parseBody (body) {\n  if (typeof body === 'string') {\n    return textEncoder.encode(body)\n  } else if (body) {\n    return body\n  } else {\n    return null\n  }\n}\n\nBody.mixin(SyncRequest.prototype)\nBody.mixin(SyncResponse.prototype)\n\nclass Headers {\n  constructor (headers) {\n    if (headers instanceof syncFetch.Headers) {\n      this[INTERNALS] = { ...headers[INTERNALS] }\n    } else {\n      this[INTERNALS] = {}\n\n      if (Array.isArray(headers)) {\n        for (const [name, value] of headers) {\n          this.append(name, value)\n        }\n      } else if (typeof headers === 'object') {\n        for (const name in headers) {\n          this.set(name, headers[name])\n        }\n      }\n    }\n  }\n\n  // modification\n  append (name, value) {\n    name = name.toLowerCase()\n    if (!this[INTERNALS][name]) {\n      this[INTERNALS][name] = []\n    }\n    this[INTERNALS][name].push(value)\n  }\n\n  delete (name) {\n    delete this[INTERNALS][name.toLowerCase()]\n  }\n\n  set (name, value) {\n    this[INTERNALS][name.toLowerCase()] = [value]\n  }\n\n  // access\n  entries () {\n    const pairs = []\n    for (const name in this[INTERNALS]) {\n      for (const value of this[INTERNALS][name]) {\n        pairs.push([name, value])\n      }\n    }\n    return pairs\n  }\n\n  get (name) {\n    name = name.toLowerCase()\n    return name in this[INTERNALS] ? this[INTERNALS][name].join(', ') : null\n  }\n\n  keys () {\n    return Object.keys(this[INTERNALS])\n  }\n\n  has (name) {\n    return name.toLowerCase() in this[INTERNALS]\n  }\n\n  values () {\n    const values = []\n    for (const name in this[INTERNALS]) {\n      for (const value of this[INTERNALS][name]) {\n        values.push(value)\n      }\n    }\n    return values\n  }\n\n  * [Symbol.iterator] () {\n    for (const name in this[INTERNALS]) {\n      for (const value of this[INTERNALS][name]) {\n        yield [name, value]\n      }\n    }\n  }\n}\n\nsyncFetch.Headers = Headers\nsyncFetch.Request = SyncRequest\nsyncFetch.Response = SyncResponse\nmodule.exports = syncFetch\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}