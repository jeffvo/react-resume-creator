{"ast":null,"code":"var noop = function () {};\nfunction ensureFunction(value) {\n  return typeof value === 'function' ? value : noop;\n}\nmodule.exports = function (node, options, context) {\n  function walk(node) {\n    enter.call(context, node);\n    switch (node.type) {\n      case 'Group':\n        node.terms.forEach(walk);\n        break;\n      case 'Multiplier':\n        walk(node.term);\n        break;\n      case 'Type':\n      case 'Property':\n      case 'Keyword':\n      case 'AtKeyword':\n      case 'Function':\n      case 'String':\n      case 'Token':\n      case 'Comma':\n        break;\n      default:\n        throw new Error('Unknown type: ' + node.type);\n    }\n    leave.call(context, node);\n  }\n  var enter = noop;\n  var leave = noop;\n  if (typeof options === 'function') {\n    enter = options;\n  } else if (options) {\n    enter = ensureFunction(options.enter);\n    leave = ensureFunction(options.leave);\n  }\n  if (enter === noop && leave === noop) {\n    throw new Error('Neither `enter` nor `leave` walker handler is set or both aren\\'t a function');\n  }\n  walk(node, context);\n};","map":{"version":3,"names":["noop","ensureFunction","value","module","exports","node","options","context","walk","enter","call","type","terms","forEach","term","Error","leave"],"sources":["/Users/jeffreyvanoosterwijk/Desktop/repos/resume-generator/node_modules/react-pdf-html/node_modules/css-tree/lib/definition-syntax/walk.js"],"sourcesContent":["var noop = function() {};\n\nfunction ensureFunction(value) {\n    return typeof value === 'function' ? value : noop;\n}\n\nmodule.exports = function(node, options, context) {\n    function walk(node) {\n        enter.call(context, node);\n\n        switch (node.type) {\n            case 'Group':\n                node.terms.forEach(walk);\n                break;\n\n            case 'Multiplier':\n                walk(node.term);\n                break;\n\n            case 'Type':\n            case 'Property':\n            case 'Keyword':\n            case 'AtKeyword':\n            case 'Function':\n            case 'String':\n            case 'Token':\n            case 'Comma':\n                break;\n\n            default:\n                throw new Error('Unknown type: ' + node.type);\n        }\n\n        leave.call(context, node);\n    }\n\n    var enter = noop;\n    var leave = noop;\n\n    if (typeof options === 'function') {\n        enter = options;\n    } else if (options) {\n        enter = ensureFunction(options.enter);\n        leave = ensureFunction(options.leave);\n    }\n\n    if (enter === noop && leave === noop) {\n        throw new Error('Neither `enter` nor `leave` walker handler is set or both aren\\'t a function');\n    }\n\n    walk(node, context);\n};\n"],"mappings":"AAAA,IAAIA,IAAI,GAAG,SAAAA,CAAA,EAAW,CAAC,CAAC;AAExB,SAASC,cAAcA,CAACC,KAAK,EAAE;EAC3B,OAAO,OAAOA,KAAK,KAAK,UAAU,GAAGA,KAAK,GAAGF,IAAI;AACrD;AAEAG,MAAM,CAACC,OAAO,GAAG,UAASC,IAAI,EAAEC,OAAO,EAAEC,OAAO,EAAE;EAC9C,SAASC,IAAIA,CAACH,IAAI,EAAE;IAChBI,KAAK,CAACC,IAAI,CAACH,OAAO,EAAEF,IAAI,CAAC;IAEzB,QAAQA,IAAI,CAACM,IAAI;MACb,KAAK,OAAO;QACRN,IAAI,CAACO,KAAK,CAACC,OAAO,CAACL,IAAI,CAAC;QACxB;MAEJ,KAAK,YAAY;QACbA,IAAI,CAACH,IAAI,CAACS,IAAI,CAAC;QACf;MAEJ,KAAK,MAAM;MACX,KAAK,UAAU;MACf,KAAK,SAAS;MACd,KAAK,WAAW;MAChB,KAAK,UAAU;MACf,KAAK,QAAQ;MACb,KAAK,OAAO;MACZ,KAAK,OAAO;QACR;MAEJ;QACI,MAAM,IAAIC,KAAK,CAAC,gBAAgB,GAAGV,IAAI,CAACM,IAAI,CAAC;IACrD;IAEAK,KAAK,CAACN,IAAI,CAACH,OAAO,EAAEF,IAAI,CAAC;EAC7B;EAEA,IAAII,KAAK,GAAGT,IAAI;EAChB,IAAIgB,KAAK,GAAGhB,IAAI;EAEhB,IAAI,OAAOM,OAAO,KAAK,UAAU,EAAE;IAC/BG,KAAK,GAAGH,OAAO;EACnB,CAAC,MAAM,IAAIA,OAAO,EAAE;IAChBG,KAAK,GAAGR,cAAc,CAACK,OAAO,CAACG,KAAK,CAAC;IACrCO,KAAK,GAAGf,cAAc,CAACK,OAAO,CAACU,KAAK,CAAC;EACzC;EAEA,IAAIP,KAAK,KAAKT,IAAI,IAAIgB,KAAK,KAAKhB,IAAI,EAAE;IAClC,MAAM,IAAIe,KAAK,CAAC,8EAA8E,CAAC;EACnG;EAEAP,IAAI,CAACH,IAAI,EAAEE,OAAO,CAAC;AACvB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}