{"ast":null,"code":"/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { existsSync } from 'fs';\nimport { tmpdir } from 'os';\nimport { join } from 'path';\nimport { Browser as InstalledBrowser, CDP_WEBSOCKET_ENDPOINT_REGEX, launch, TimeoutError as BrowsersTimeoutError, WEBDRIVER_BIDI_WEBSOCKET_ENDPOINT_REGEX, computeExecutablePath } from '@puppeteer/browsers';\nimport { firstValueFrom, from, map, race, timer } from '../../third_party/rxjs/rxjs.js';\nimport { CdpBrowser } from '../cdp/Browser.js';\nimport { Connection } from '../cdp/Connection.js';\nimport { TimeoutError } from '../common/Errors.js';\nimport { debugError, DEFAULT_VIEWPORT } from '../common/util.js';\nimport { NodeWebSocketTransport as WebSocketTransport } from './NodeWebSocketTransport.js';\nimport { PipeTransport } from './PipeTransport.js';\n/**\n * Describes a launcher - a class that is able to create and launch a browser instance.\n *\n * @public\n */\nexport class ProductLauncher {\n  #product;\n  /**\n   * @internal\n   */\n  puppeteer;\n  /**\n   * @internal\n   */\n  actualBrowserRevision;\n  /**\n   * @internal\n   */\n  constructor(puppeteer, product) {\n    this.puppeteer = puppeteer;\n    this.#product = product;\n  }\n  get product() {\n    return this.#product;\n  }\n  async launch(options = {}) {\n    const {\n      dumpio = false,\n      env = process.env,\n      handleSIGINT = true,\n      handleSIGTERM = true,\n      handleSIGHUP = true,\n      ignoreHTTPSErrors = false,\n      defaultViewport = DEFAULT_VIEWPORT,\n      slowMo = 0,\n      timeout = 30000,\n      waitForInitialPage = true,\n      protocolTimeout,\n      protocol\n    } = options;\n    const launchArgs = await this.computeLaunchArguments(options);\n    const usePipe = launchArgs.args.includes('--remote-debugging-pipe');\n    const onProcessExit = async () => {\n      await this.cleanUserDataDir(launchArgs.userDataDir, {\n        isTemp: launchArgs.isTempUserDataDir\n      });\n    };\n    const browserProcess = launch({\n      executablePath: launchArgs.executablePath,\n      args: launchArgs.args,\n      handleSIGHUP,\n      handleSIGTERM,\n      handleSIGINT,\n      dumpio,\n      env,\n      pipe: usePipe,\n      onExit: onProcessExit\n    });\n    let browser;\n    let cdpConnection;\n    let closing = false;\n    const browserCloseCallback = async () => {\n      if (closing) {\n        return;\n      }\n      closing = true;\n      await this.closeBrowser(browserProcess, cdpConnection);\n    };\n    try {\n      if (this.#product === 'firefox' && protocol === 'webDriverBiDi') {\n        browser = await this.createBiDiBrowser(browserProcess, browserCloseCallback, {\n          timeout,\n          protocolTimeout,\n          slowMo,\n          defaultViewport,\n          ignoreHTTPSErrors\n        });\n      } else {\n        if (usePipe) {\n          cdpConnection = await this.createCdpPipeConnection(browserProcess, {\n            timeout,\n            protocolTimeout,\n            slowMo\n          });\n        } else {\n          cdpConnection = await this.createCdpSocketConnection(browserProcess, {\n            timeout,\n            protocolTimeout,\n            slowMo\n          });\n        }\n        if (protocol === 'webDriverBiDi') {\n          browser = await this.createBiDiOverCdpBrowser(browserProcess, cdpConnection, browserCloseCallback, {\n            timeout,\n            protocolTimeout,\n            slowMo,\n            defaultViewport,\n            ignoreHTTPSErrors\n          });\n        } else {\n          browser = await CdpBrowser._create(this.product, cdpConnection, [], ignoreHTTPSErrors, defaultViewport, browserProcess.nodeProcess, browserCloseCallback, options.targetFilter);\n        }\n      }\n    } catch (error) {\n      void browserCloseCallback();\n      if (error instanceof BrowsersTimeoutError) {\n        throw new TimeoutError(error.message);\n      }\n      throw error;\n    }\n    if (waitForInitialPage && protocol !== 'webDriverBiDi') {\n      await this.waitForPageTarget(browser, timeout);\n    }\n    return browser;\n  }\n  /**\n   * Set only for Firefox, after the launcher resolves the `latest` revision to\n   * the actual revision.\n   * @internal\n   */\n  getActualBrowserRevision() {\n    return this.actualBrowserRevision;\n  }\n  /**\n   * @internal\n   */\n  async closeBrowser(browserProcess, cdpConnection) {\n    if (cdpConnection) {\n      // Attempt to close the browser gracefully\n      try {\n        await cdpConnection.closeBrowser();\n        await browserProcess.hasClosed();\n      } catch (error) {\n        debugError(error);\n        await browserProcess.close();\n      }\n    } else {\n      // Wait for a possible graceful shutdown.\n      await firstValueFrom(race(from(browserProcess.hasClosed()), timer(5000).pipe(map(() => {\n        return from(browserProcess.close());\n      }))));\n    }\n  }\n  /**\n   * @internal\n   */\n  async waitForPageTarget(browser, timeout) {\n    try {\n      await browser.waitForTarget(t => {\n        return t.type() === 'page';\n      }, {\n        timeout\n      });\n    } catch (error) {\n      await browser.close();\n      throw error;\n    }\n  }\n  /**\n   * @internal\n   */\n  async createCdpSocketConnection(browserProcess, opts) {\n    const browserWSEndpoint = await browserProcess.waitForLineOutput(CDP_WEBSOCKET_ENDPOINT_REGEX, opts.timeout);\n    const transport = await WebSocketTransport.create(browserWSEndpoint);\n    return new Connection(browserWSEndpoint, transport, opts.slowMo, opts.protocolTimeout);\n  }\n  /**\n   * @internal\n   */\n  async createCdpPipeConnection(browserProcess, opts) {\n    // stdio was assigned during start(), and the 'pipe' option there adds the\n    // 4th and 5th items to stdio array\n    const {\n      3: pipeWrite,\n      4: pipeRead\n    } = browserProcess.nodeProcess.stdio;\n    const transport = new PipeTransport(pipeWrite, pipeRead);\n    return new Connection('', transport, opts.slowMo, opts.protocolTimeout);\n  }\n  /**\n   * @internal\n   */\n  async createBiDiOverCdpBrowser(browserProcess, connection, closeCallback, opts) {\n    // TODO: use other options too.\n    const BiDi = await import( /* webpackIgnore: true */'../bidi/bidi.js');\n    const bidiConnection = await BiDi.connectBidiOverCdp(connection, {\n      acceptInsecureCerts: opts.ignoreHTTPSErrors ?? false\n    });\n    return await BiDi.BidiBrowser.create({\n      connection: bidiConnection,\n      closeCallback,\n      process: browserProcess.nodeProcess,\n      defaultViewport: opts.defaultViewport,\n      ignoreHTTPSErrors: opts.ignoreHTTPSErrors\n    });\n  }\n  /**\n   * @internal\n   */\n  async createBiDiBrowser(browserProcess, closeCallback, opts) {\n    const browserWSEndpoint = (await browserProcess.waitForLineOutput(WEBDRIVER_BIDI_WEBSOCKET_ENDPOINT_REGEX, opts.timeout)) + '/session';\n    const transport = await WebSocketTransport.create(browserWSEndpoint);\n    const BiDi = await import( /* webpackIgnore: true */'../bidi/bidi.js');\n    const bidiConnection = new BiDi.BidiConnection(browserWSEndpoint, transport, opts.slowMo, opts.protocolTimeout);\n    // TODO: use other options too.\n    return await BiDi.BidiBrowser.create({\n      connection: bidiConnection,\n      closeCallback,\n      process: browserProcess.nodeProcess,\n      defaultViewport: opts.defaultViewport,\n      ignoreHTTPSErrors: opts.ignoreHTTPSErrors\n    });\n  }\n  /**\n   * @internal\n   */\n  getProfilePath() {\n    return join(this.puppeteer.configuration.temporaryDirectory ?? tmpdir(), `puppeteer_dev_${this.product}_profile-`);\n  }\n  /**\n   * @internal\n   */\n  resolveExecutablePath(headless) {\n    let executablePath = this.puppeteer.configuration.executablePath;\n    if (executablePath) {\n      if (!existsSync(executablePath)) {\n        throw new Error(`Tried to find the browser at the configured path (${executablePath}), but no executable was found.`);\n      }\n      return executablePath;\n    }\n    function productToBrowser(product, headless) {\n      switch (product) {\n        case 'chrome':\n          if (headless === 'shell') {\n            return InstalledBrowser.CHROMEHEADLESSSHELL;\n          }\n          return InstalledBrowser.CHROME;\n        case 'firefox':\n          return InstalledBrowser.FIREFOX;\n      }\n      return InstalledBrowser.CHROME;\n    }\n    executablePath = computeExecutablePath({\n      cacheDir: this.puppeteer.defaultDownloadPath,\n      browser: productToBrowser(this.product, headless),\n      buildId: this.puppeteer.browserRevision\n    });\n    if (!existsSync(executablePath)) {\n      if (this.puppeteer.configuration.browserRevision) {\n        throw new Error(`Tried to find the browser at the configured path (${executablePath}) for revision ${this.puppeteer.browserRevision}, but no executable was found.`);\n      }\n      switch (this.product) {\n        case 'chrome':\n          throw new Error(`Could not find Chrome (ver. ${this.puppeteer.browserRevision}). This can occur if either\\n` + ' 1. you did not perform an installation before running the script (e.g. `npx puppeteer browsers install chrome`) or\\n' + ` 2. your cache path is incorrectly configured (which is: ${this.puppeteer.configuration.cacheDirectory}).\\n` + 'For (2), check out our guide on configuring puppeteer at https://pptr.dev/guides/configuration.');\n        case 'firefox':\n          throw new Error(`Could not find Firefox (rev. ${this.puppeteer.browserRevision}). This can occur if either\\n` + ' 1. you did not perform an installation for Firefox before running the script (e.g. `npx puppeteer browsers install firefox`) or\\n' + ` 2. your cache path is incorrectly configured (which is: ${this.puppeteer.configuration.cacheDirectory}).\\n` + 'For (2), check out our guide on configuring puppeteer at https://pptr.dev/guides/configuration.');\n      }\n    }\n    return executablePath;\n  }\n}","map":{"version":3,"names":["existsSync","tmpdir","join","Browser","InstalledBrowser","CDP_WEBSOCKET_ENDPOINT_REGEX","launch","TimeoutError","BrowsersTimeoutError","WEBDRIVER_BIDI_WEBSOCKET_ENDPOINT_REGEX","computeExecutablePath","firstValueFrom","from","map","race","timer","CdpBrowser","Connection","debugError","DEFAULT_VIEWPORT","NodeWebSocketTransport","WebSocketTransport","PipeTransport","ProductLauncher","product","puppeteer","actualBrowserRevision","constructor","options","dumpio","env","process","handleSIGINT","handleSIGTERM","handleSIGHUP","ignoreHTTPSErrors","defaultViewport","slowMo","timeout","waitForInitialPage","protocolTimeout","protocol","launchArgs","computeLaunchArguments","usePipe","args","includes","onProcessExit","cleanUserDataDir","userDataDir","isTemp","isTempUserDataDir","browserProcess","executablePath","pipe","onExit","browser","cdpConnection","closing","browserCloseCallback","closeBrowser","createBiDiBrowser","createCdpPipeConnection","createCdpSocketConnection","createBiDiOverCdpBrowser","_create","nodeProcess","targetFilter","error","message","waitForPageTarget","getActualBrowserRevision","hasClosed","close","waitForTarget","t","type","opts","browserWSEndpoint","waitForLineOutput","transport","create","pipeWrite","pipeRead","stdio","connection","closeCallback","BiDi","bidiConnection","connectBidiOverCdp","acceptInsecureCerts","BidiBrowser","BidiConnection","getProfilePath","configuration","temporaryDirectory","resolveExecutablePath","headless","Error","productToBrowser","CHROMEHEADLESSSHELL","CHROME","FIREFOX","cacheDir","defaultDownloadPath","buildId","browserRevision","cacheDirectory"],"sources":["/Users/jeffreyvanoosterwijk/Desktop/repos/resume-generator/node_modules/puppeteer-core/src/node/ProductLauncher.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google Inc.\n * SPDX-License-Identifier: Apache-2.0\n */\nimport {existsSync} from 'fs';\nimport {tmpdir} from 'os';\nimport {join} from 'path';\n\nimport {\n  Browser as InstalledBrowser,\n  CDP_WEBSOCKET_ENDPOINT_REGEX,\n  launch,\n  TimeoutError as BrowsersTimeoutError,\n  WEBDRIVER_BIDI_WEBSOCKET_ENDPOINT_REGEX,\n  computeExecutablePath,\n} from '@puppeteer/browsers';\n\nimport {\n  firstValueFrom,\n  from,\n  map,\n  race,\n  timer,\n} from '../../third_party/rxjs/rxjs.js';\nimport type {Browser, BrowserCloseCallback} from '../api/Browser.js';\nimport {CdpBrowser} from '../cdp/Browser.js';\nimport {Connection} from '../cdp/Connection.js';\nimport {TimeoutError} from '../common/Errors.js';\nimport type {Product} from '../common/Product.js';\nimport {debugError, DEFAULT_VIEWPORT} from '../common/util.js';\nimport type {Viewport} from '../common/Viewport.js';\n\nimport type {\n  BrowserLaunchArgumentOptions,\n  ChromeReleaseChannel,\n  PuppeteerNodeLaunchOptions,\n} from './LaunchOptions.js';\nimport {NodeWebSocketTransport as WebSocketTransport} from './NodeWebSocketTransport.js';\nimport {PipeTransport} from './PipeTransport.js';\nimport type {PuppeteerNode} from './PuppeteerNode.js';\n\n/**\n * @internal\n */\nexport interface ResolvedLaunchArgs {\n  isTempUserDataDir: boolean;\n  userDataDir: string;\n  executablePath: string;\n  args: string[];\n}\n\n/**\n * Describes a launcher - a class that is able to create and launch a browser instance.\n *\n * @public\n */\nexport abstract class ProductLauncher {\n  #product: Product;\n\n  /**\n   * @internal\n   */\n  puppeteer: PuppeteerNode;\n\n  /**\n   * @internal\n   */\n  protected actualBrowserRevision?: string;\n\n  /**\n   * @internal\n   */\n  constructor(puppeteer: PuppeteerNode, product: Product) {\n    this.puppeteer = puppeteer;\n    this.#product = product;\n  }\n\n  get product(): Product {\n    return this.#product;\n  }\n\n  async launch(options: PuppeteerNodeLaunchOptions = {}): Promise<Browser> {\n    const {\n      dumpio = false,\n      env = process.env,\n      handleSIGINT = true,\n      handleSIGTERM = true,\n      handleSIGHUP = true,\n      ignoreHTTPSErrors = false,\n      defaultViewport = DEFAULT_VIEWPORT,\n      slowMo = 0,\n      timeout = 30000,\n      waitForInitialPage = true,\n      protocolTimeout,\n      protocol,\n    } = options;\n\n    const launchArgs = await this.computeLaunchArguments(options);\n\n    const usePipe = launchArgs.args.includes('--remote-debugging-pipe');\n\n    const onProcessExit = async () => {\n      await this.cleanUserDataDir(launchArgs.userDataDir, {\n        isTemp: launchArgs.isTempUserDataDir,\n      });\n    };\n\n    const browserProcess = launch({\n      executablePath: launchArgs.executablePath,\n      args: launchArgs.args,\n      handleSIGHUP,\n      handleSIGTERM,\n      handleSIGINT,\n      dumpio,\n      env,\n      pipe: usePipe,\n      onExit: onProcessExit,\n    });\n\n    let browser: Browser;\n    let cdpConnection: Connection;\n    let closing = false;\n\n    const browserCloseCallback: BrowserCloseCallback = async () => {\n      if (closing) {\n        return;\n      }\n      closing = true;\n      await this.closeBrowser(browserProcess, cdpConnection);\n    };\n\n    try {\n      if (this.#product === 'firefox' && protocol === 'webDriverBiDi') {\n        browser = await this.createBiDiBrowser(\n          browserProcess,\n          browserCloseCallback,\n          {\n            timeout,\n            protocolTimeout,\n            slowMo,\n            defaultViewport,\n            ignoreHTTPSErrors,\n          }\n        );\n      } else {\n        if (usePipe) {\n          cdpConnection = await this.createCdpPipeConnection(browserProcess, {\n            timeout,\n            protocolTimeout,\n            slowMo,\n          });\n        } else {\n          cdpConnection = await this.createCdpSocketConnection(browserProcess, {\n            timeout,\n            protocolTimeout,\n            slowMo,\n          });\n        }\n        if (protocol === 'webDriverBiDi') {\n          browser = await this.createBiDiOverCdpBrowser(\n            browserProcess,\n            cdpConnection,\n            browserCloseCallback,\n            {\n              timeout,\n              protocolTimeout,\n              slowMo,\n              defaultViewport,\n              ignoreHTTPSErrors,\n            }\n          );\n        } else {\n          browser = await CdpBrowser._create(\n            this.product,\n            cdpConnection,\n            [],\n            ignoreHTTPSErrors,\n            defaultViewport,\n            browserProcess.nodeProcess,\n            browserCloseCallback,\n            options.targetFilter\n          );\n        }\n      }\n    } catch (error) {\n      void browserCloseCallback();\n      if (error instanceof BrowsersTimeoutError) {\n        throw new TimeoutError(error.message);\n      }\n      throw error;\n    }\n\n    if (waitForInitialPage && protocol !== 'webDriverBiDi') {\n      await this.waitForPageTarget(browser, timeout);\n    }\n\n    return browser;\n  }\n\n  abstract executablePath(channel?: ChromeReleaseChannel): string;\n\n  abstract defaultArgs(object: BrowserLaunchArgumentOptions): string[];\n\n  /**\n   * Set only for Firefox, after the launcher resolves the `latest` revision to\n   * the actual revision.\n   * @internal\n   */\n  getActualBrowserRevision(): string | undefined {\n    return this.actualBrowserRevision;\n  }\n\n  /**\n   * @internal\n   */\n  protected abstract computeLaunchArguments(\n    options: PuppeteerNodeLaunchOptions\n  ): Promise<ResolvedLaunchArgs>;\n\n  /**\n   * @internal\n   */\n  protected abstract cleanUserDataDir(\n    path: string,\n    opts: {isTemp: boolean}\n  ): Promise<void>;\n\n  /**\n   * @internal\n   */\n  protected async closeBrowser(\n    browserProcess: ReturnType<typeof launch>,\n    cdpConnection?: Connection\n  ): Promise<void> {\n    if (cdpConnection) {\n      // Attempt to close the browser gracefully\n      try {\n        await cdpConnection.closeBrowser();\n        await browserProcess.hasClosed();\n      } catch (error) {\n        debugError(error);\n        await browserProcess.close();\n      }\n    } else {\n      // Wait for a possible graceful shutdown.\n      await firstValueFrom(\n        race(\n          from(browserProcess.hasClosed()),\n          timer(5000).pipe(\n            map(() => {\n              return from(browserProcess.close());\n            })\n          )\n        )\n      );\n    }\n  }\n\n  /**\n   * @internal\n   */\n  protected async waitForPageTarget(\n    browser: Browser,\n    timeout: number\n  ): Promise<void> {\n    try {\n      await browser.waitForTarget(\n        t => {\n          return t.type() === 'page';\n        },\n        {timeout}\n      );\n    } catch (error) {\n      await browser.close();\n      throw error;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  protected async createCdpSocketConnection(\n    browserProcess: ReturnType<typeof launch>,\n    opts: {timeout: number; protocolTimeout: number | undefined; slowMo: number}\n  ): Promise<Connection> {\n    const browserWSEndpoint = await browserProcess.waitForLineOutput(\n      CDP_WEBSOCKET_ENDPOINT_REGEX,\n      opts.timeout\n    );\n    const transport = await WebSocketTransport.create(browserWSEndpoint);\n    return new Connection(\n      browserWSEndpoint,\n      transport,\n      opts.slowMo,\n      opts.protocolTimeout\n    );\n  }\n\n  /**\n   * @internal\n   */\n  protected async createCdpPipeConnection(\n    browserProcess: ReturnType<typeof launch>,\n    opts: {timeout: number; protocolTimeout: number | undefined; slowMo: number}\n  ): Promise<Connection> {\n    // stdio was assigned during start(), and the 'pipe' option there adds the\n    // 4th and 5th items to stdio array\n    const {3: pipeWrite, 4: pipeRead} = browserProcess.nodeProcess.stdio;\n    const transport = new PipeTransport(\n      pipeWrite as NodeJS.WritableStream,\n      pipeRead as NodeJS.ReadableStream\n    );\n    return new Connection('', transport, opts.slowMo, opts.protocolTimeout);\n  }\n\n  /**\n   * @internal\n   */\n  protected async createBiDiOverCdpBrowser(\n    browserProcess: ReturnType<typeof launch>,\n    connection: Connection,\n    closeCallback: BrowserCloseCallback,\n    opts: {\n      timeout: number;\n      protocolTimeout: number | undefined;\n      slowMo: number;\n      defaultViewport: Viewport | null;\n      ignoreHTTPSErrors?: boolean;\n    }\n  ): Promise<Browser> {\n    // TODO: use other options too.\n    const BiDi = await import(/* webpackIgnore: true */ '../bidi/bidi.js');\n    const bidiConnection = await BiDi.connectBidiOverCdp(connection, {\n      acceptInsecureCerts: opts.ignoreHTTPSErrors ?? false,\n    });\n    return await BiDi.BidiBrowser.create({\n      connection: bidiConnection,\n      closeCallback,\n      process: browserProcess.nodeProcess,\n      defaultViewport: opts.defaultViewport,\n      ignoreHTTPSErrors: opts.ignoreHTTPSErrors,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  protected async createBiDiBrowser(\n    browserProcess: ReturnType<typeof launch>,\n    closeCallback: BrowserCloseCallback,\n    opts: {\n      timeout: number;\n      protocolTimeout: number | undefined;\n      slowMo: number;\n      defaultViewport: Viewport | null;\n      ignoreHTTPSErrors?: boolean;\n    }\n  ): Promise<Browser> {\n    const browserWSEndpoint =\n      (await browserProcess.waitForLineOutput(\n        WEBDRIVER_BIDI_WEBSOCKET_ENDPOINT_REGEX,\n        opts.timeout\n      )) + '/session';\n    const transport = await WebSocketTransport.create(browserWSEndpoint);\n    const BiDi = await import(/* webpackIgnore: true */ '../bidi/bidi.js');\n    const bidiConnection = new BiDi.BidiConnection(\n      browserWSEndpoint,\n      transport,\n      opts.slowMo,\n      opts.protocolTimeout\n    );\n    // TODO: use other options too.\n    return await BiDi.BidiBrowser.create({\n      connection: bidiConnection,\n      closeCallback,\n      process: browserProcess.nodeProcess,\n      defaultViewport: opts.defaultViewport,\n      ignoreHTTPSErrors: opts.ignoreHTTPSErrors,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  protected getProfilePath(): string {\n    return join(\n      this.puppeteer.configuration.temporaryDirectory ?? tmpdir(),\n      `puppeteer_dev_${this.product}_profile-`\n    );\n  }\n\n  /**\n   * @internal\n   */\n  protected resolveExecutablePath(headless?: boolean | 'shell'): string {\n    let executablePath = this.puppeteer.configuration.executablePath;\n    if (executablePath) {\n      if (!existsSync(executablePath)) {\n        throw new Error(\n          `Tried to find the browser at the configured path (${executablePath}), but no executable was found.`\n        );\n      }\n      return executablePath;\n    }\n\n    function productToBrowser(product?: Product, headless?: boolean | 'shell') {\n      switch (product) {\n        case 'chrome':\n          if (headless === 'shell') {\n            return InstalledBrowser.CHROMEHEADLESSSHELL;\n          }\n          return InstalledBrowser.CHROME;\n        case 'firefox':\n          return InstalledBrowser.FIREFOX;\n      }\n      return InstalledBrowser.CHROME;\n    }\n\n    executablePath = computeExecutablePath({\n      cacheDir: this.puppeteer.defaultDownloadPath!,\n      browser: productToBrowser(this.product, headless),\n      buildId: this.puppeteer.browserRevision,\n    });\n\n    if (!existsSync(executablePath)) {\n      if (this.puppeteer.configuration.browserRevision) {\n        throw new Error(\n          `Tried to find the browser at the configured path (${executablePath}) for revision ${this.puppeteer.browserRevision}, but no executable was found.`\n        );\n      }\n      switch (this.product) {\n        case 'chrome':\n          throw new Error(\n            `Could not find Chrome (ver. ${this.puppeteer.browserRevision}). This can occur if either\\n` +\n              ' 1. you did not perform an installation before running the script (e.g. `npx puppeteer browsers install chrome`) or\\n' +\n              ` 2. your cache path is incorrectly configured (which is: ${this.puppeteer.configuration.cacheDirectory}).\\n` +\n              'For (2), check out our guide on configuring puppeteer at https://pptr.dev/guides/configuration.'\n          );\n        case 'firefox':\n          throw new Error(\n            `Could not find Firefox (rev. ${this.puppeteer.browserRevision}). This can occur if either\\n` +\n              ' 1. you did not perform an installation for Firefox before running the script (e.g. `npx puppeteer browsers install firefox`) or\\n' +\n              ` 2. your cache path is incorrectly configured (which is: ${this.puppeteer.configuration.cacheDirectory}).\\n` +\n              'For (2), check out our guide on configuring puppeteer at https://pptr.dev/guides/configuration.'\n          );\n      }\n    }\n    return executablePath;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}