{"ast":null,"code":"var TYPE = require('../../tokenizer').TYPE;\nvar WHITESPACE = TYPE.WhiteSpace;\nvar COMMENT = TYPE.Comment;\nvar IDENT = TYPE.Ident;\nvar FUNCTION = TYPE.Function;\nvar COLON = TYPE.Colon;\nvar LEFTPARENTHESIS = TYPE.LeftParenthesis;\nfunction consumeRaw() {\n  return this.createSingleNodeList(this.Raw(this.scanner.tokenIndex, null, false));\n}\nfunction parentheses() {\n  this.scanner.skipSC();\n  if (this.scanner.tokenType === IDENT && this.lookupNonWSType(1) === COLON) {\n    return this.createSingleNodeList(this.Declaration());\n  }\n  return readSequence.call(this);\n}\nfunction readSequence() {\n  var children = this.createList();\n  var space = null;\n  var child;\n  this.scanner.skipSC();\n  scan: while (!this.scanner.eof) {\n    switch (this.scanner.tokenType) {\n      case WHITESPACE:\n        space = this.WhiteSpace();\n        continue;\n      case COMMENT:\n        this.scanner.next();\n        continue;\n      case FUNCTION:\n        child = this.Function(consumeRaw, this.scope.AtrulePrelude);\n        break;\n      case IDENT:\n        child = this.Identifier();\n        break;\n      case LEFTPARENTHESIS:\n        child = this.Parentheses(parentheses, this.scope.AtrulePrelude);\n        break;\n      default:\n        break scan;\n    }\n    if (space !== null) {\n      children.push(space);\n      space = null;\n    }\n    children.push(child);\n  }\n  return children;\n}\nmodule.exports = {\n  parse: {\n    prelude: function () {\n      var children = readSequence.call(this);\n      if (this.getFirstListNode(children) === null) {\n        this.error('Condition is expected');\n      }\n      return children;\n    },\n    block: function () {\n      return this.Block(false);\n    }\n  }\n};","map":{"version":3,"names":["TYPE","require","WHITESPACE","WhiteSpace","COMMENT","Comment","IDENT","Ident","FUNCTION","Function","COLON","Colon","LEFTPARENTHESIS","LeftParenthesis","consumeRaw","createSingleNodeList","Raw","scanner","tokenIndex","parentheses","skipSC","tokenType","lookupNonWSType","Declaration","readSequence","call","children","createList","space","child","scan","eof","next","scope","AtrulePrelude","Identifier","Parentheses","push","module","exports","parse","prelude","getFirstListNode","error","block","Block"],"sources":["/Users/jeffreyvanoosterwijk/Desktop/repos/resume-generator/node_modules/react-pdf-html/node_modules/css-tree/lib/syntax/atrule/supports.js"],"sourcesContent":["var TYPE = require('../../tokenizer').TYPE;\n\nvar WHITESPACE = TYPE.WhiteSpace;\nvar COMMENT = TYPE.Comment;\nvar IDENT = TYPE.Ident;\nvar FUNCTION = TYPE.Function;\nvar COLON = TYPE.Colon;\nvar LEFTPARENTHESIS = TYPE.LeftParenthesis;\n\nfunction consumeRaw() {\n    return this.createSingleNodeList(\n        this.Raw(this.scanner.tokenIndex, null, false)\n    );\n}\n\nfunction parentheses() {\n    this.scanner.skipSC();\n\n    if (this.scanner.tokenType === IDENT &&\n        this.lookupNonWSType(1) === COLON) {\n        return this.createSingleNodeList(\n            this.Declaration()\n        );\n    }\n\n    return readSequence.call(this);\n}\n\nfunction readSequence() {\n    var children = this.createList();\n    var space = null;\n    var child;\n\n    this.scanner.skipSC();\n\n    scan:\n    while (!this.scanner.eof) {\n        switch (this.scanner.tokenType) {\n            case WHITESPACE:\n                space = this.WhiteSpace();\n                continue;\n\n            case COMMENT:\n                this.scanner.next();\n                continue;\n\n            case FUNCTION:\n                child = this.Function(consumeRaw, this.scope.AtrulePrelude);\n                break;\n\n            case IDENT:\n                child = this.Identifier();\n                break;\n\n            case LEFTPARENTHESIS:\n                child = this.Parentheses(parentheses, this.scope.AtrulePrelude);\n                break;\n\n            default:\n                break scan;\n        }\n\n        if (space !== null) {\n            children.push(space);\n            space = null;\n        }\n\n        children.push(child);\n    }\n\n    return children;\n}\n\nmodule.exports = {\n    parse: {\n        prelude: function() {\n            var children = readSequence.call(this);\n\n            if (this.getFirstListNode(children) === null) {\n                this.error('Condition is expected');\n            }\n\n            return children;\n        },\n        block: function() {\n            return this.Block(false);\n        }\n    }\n};\n"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,iBAAiB,CAAC,CAACD,IAAI;AAE1C,IAAIE,UAAU,GAAGF,IAAI,CAACG,UAAU;AAChC,IAAIC,OAAO,GAAGJ,IAAI,CAACK,OAAO;AAC1B,IAAIC,KAAK,GAAGN,IAAI,CAACO,KAAK;AACtB,IAAIC,QAAQ,GAAGR,IAAI,CAACS,QAAQ;AAC5B,IAAIC,KAAK,GAAGV,IAAI,CAACW,KAAK;AACtB,IAAIC,eAAe,GAAGZ,IAAI,CAACa,eAAe;AAE1C,SAASC,UAAUA,CAAA,EAAG;EAClB,OAAO,IAAI,CAACC,oBAAoB,CAC5B,IAAI,CAACC,GAAG,CAAC,IAAI,CAACC,OAAO,CAACC,UAAU,EAAE,IAAI,EAAE,KAAK,CACjD,CAAC;AACL;AAEA,SAASC,WAAWA,CAAA,EAAG;EACnB,IAAI,CAACF,OAAO,CAACG,MAAM,CAAC,CAAC;EAErB,IAAI,IAAI,CAACH,OAAO,CAACI,SAAS,KAAKf,KAAK,IAChC,IAAI,CAACgB,eAAe,CAAC,CAAC,CAAC,KAAKZ,KAAK,EAAE;IACnC,OAAO,IAAI,CAACK,oBAAoB,CAC5B,IAAI,CAACQ,WAAW,CAAC,CACrB,CAAC;EACL;EAEA,OAAOC,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;AAClC;AAEA,SAASD,YAAYA,CAAA,EAAG;EACpB,IAAIE,QAAQ,GAAG,IAAI,CAACC,UAAU,CAAC,CAAC;EAChC,IAAIC,KAAK,GAAG,IAAI;EAChB,IAAIC,KAAK;EAET,IAAI,CAACZ,OAAO,CAACG,MAAM,CAAC,CAAC;EAErBU,IAAI,EACJ,OAAO,CAAC,IAAI,CAACb,OAAO,CAACc,GAAG,EAAE;IACtB,QAAQ,IAAI,CAACd,OAAO,CAACI,SAAS;MAC1B,KAAKnB,UAAU;QACX0B,KAAK,GAAG,IAAI,CAACzB,UAAU,CAAC,CAAC;QACzB;MAEJ,KAAKC,OAAO;QACR,IAAI,CAACa,OAAO,CAACe,IAAI,CAAC,CAAC;QACnB;MAEJ,KAAKxB,QAAQ;QACTqB,KAAK,GAAG,IAAI,CAACpB,QAAQ,CAACK,UAAU,EAAE,IAAI,CAACmB,KAAK,CAACC,aAAa,CAAC;QAC3D;MAEJ,KAAK5B,KAAK;QACNuB,KAAK,GAAG,IAAI,CAACM,UAAU,CAAC,CAAC;QACzB;MAEJ,KAAKvB,eAAe;QAChBiB,KAAK,GAAG,IAAI,CAACO,WAAW,CAACjB,WAAW,EAAE,IAAI,CAACc,KAAK,CAACC,aAAa,CAAC;QAC/D;MAEJ;QACI,MAAMJ,IAAI;IAClB;IAEA,IAAIF,KAAK,KAAK,IAAI,EAAE;MAChBF,QAAQ,CAACW,IAAI,CAACT,KAAK,CAAC;MACpBA,KAAK,GAAG,IAAI;IAChB;IAEAF,QAAQ,CAACW,IAAI,CAACR,KAAK,CAAC;EACxB;EAEA,OAAOH,QAAQ;AACnB;AAEAY,MAAM,CAACC,OAAO,GAAG;EACbC,KAAK,EAAE;IACHC,OAAO,EAAE,SAAAA,CAAA,EAAW;MAChB,IAAIf,QAAQ,GAAGF,YAAY,CAACC,IAAI,CAAC,IAAI,CAAC;MAEtC,IAAI,IAAI,CAACiB,gBAAgB,CAAChB,QAAQ,CAAC,KAAK,IAAI,EAAE;QAC1C,IAAI,CAACiB,KAAK,CAAC,uBAAuB,CAAC;MACvC;MAEA,OAAOjB,QAAQ;IACnB,CAAC;IACDkB,KAAK,EAAE,SAAAA,CAAA,EAAW;MACd,OAAO,IAAI,CAACC,KAAK,CAAC,KAAK,CAAC;IAC5B;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}