{"ast":null,"code":"var isCustomProperty = require('../../utils/names').isCustomProperty;\nvar TYPE = require('../../tokenizer').TYPE;\nvar rawMode = require('./Raw').mode;\nvar IDENT = TYPE.Ident;\nvar HASH = TYPE.Hash;\nvar COLON = TYPE.Colon;\nvar SEMICOLON = TYPE.Semicolon;\nvar DELIM = TYPE.Delim;\nvar WHITESPACE = TYPE.WhiteSpace;\nvar EXCLAMATIONMARK = 0x0021; // U+0021 EXCLAMATION MARK (!)\nvar NUMBERSIGN = 0x0023; // U+0023 NUMBER SIGN (#)\nvar DOLLARSIGN = 0x0024; // U+0024 DOLLAR SIGN ($)\nvar AMPERSAND = 0x0026; // U+0026 ANPERSAND (&)\nvar ASTERISK = 0x002A; // U+002A ASTERISK (*)\nvar PLUSSIGN = 0x002B; // U+002B PLUS SIGN (+)\nvar SOLIDUS = 0x002F; // U+002F SOLIDUS (/)\n\nfunction consumeValueRaw(startToken) {\n  return this.Raw(startToken, rawMode.exclamationMarkOrSemicolon, true);\n}\nfunction consumeCustomPropertyRaw(startToken) {\n  return this.Raw(startToken, rawMode.exclamationMarkOrSemicolon, false);\n}\nfunction consumeValue() {\n  var startValueToken = this.scanner.tokenIndex;\n  var value = this.Value();\n  if (value.type !== 'Raw' && this.scanner.eof === false && this.scanner.tokenType !== SEMICOLON && this.scanner.isDelim(EXCLAMATIONMARK) === false && this.scanner.isBalanceEdge(startValueToken) === false) {\n    this.error();\n  }\n  return value;\n}\nmodule.exports = {\n  name: 'Declaration',\n  structure: {\n    important: [Boolean, String],\n    property: String,\n    value: ['Value', 'Raw']\n  },\n  parse: function () {\n    var start = this.scanner.tokenStart;\n    var startToken = this.scanner.tokenIndex;\n    var property = readProperty.call(this);\n    var customProperty = isCustomProperty(property);\n    var parseValue = customProperty ? this.parseCustomProperty : this.parseValue;\n    var consumeRaw = customProperty ? consumeCustomPropertyRaw : consumeValueRaw;\n    var important = false;\n    var value;\n    this.scanner.skipSC();\n    this.eat(COLON);\n    const valueStart = this.scanner.tokenIndex;\n    if (!customProperty) {\n      this.scanner.skipSC();\n    }\n    if (parseValue) {\n      value = this.parseWithFallback(consumeValue, consumeRaw);\n    } else {\n      value = consumeRaw.call(this, this.scanner.tokenIndex);\n    }\n    if (customProperty && value.type === 'Value' && value.children.isEmpty()) {\n      for (let offset = valueStart - this.scanner.tokenIndex; offset <= 0; offset++) {\n        if (this.scanner.lookupType(offset) === WHITESPACE) {\n          value.children.appendData({\n            type: 'WhiteSpace',\n            loc: null,\n            value: ' '\n          });\n          break;\n        }\n      }\n    }\n    if (this.scanner.isDelim(EXCLAMATIONMARK)) {\n      important = getImportant.call(this);\n      this.scanner.skipSC();\n    }\n\n    // Do not include semicolon to range per spec\n    // https://drafts.csswg.org/css-syntax/#declaration-diagram\n\n    if (this.scanner.eof === false && this.scanner.tokenType !== SEMICOLON && this.scanner.isBalanceEdge(startToken) === false) {\n      this.error();\n    }\n    return {\n      type: 'Declaration',\n      loc: this.getLocation(start, this.scanner.tokenStart),\n      important: important,\n      property: property,\n      value: value\n    };\n  },\n  generate: function (node) {\n    this.chunk(node.property);\n    this.chunk(':');\n    this.node(node.value);\n    if (node.important) {\n      this.chunk(node.important === true ? '!important' : '!' + node.important);\n    }\n  },\n  walkContext: 'declaration'\n};\nfunction readProperty() {\n  var start = this.scanner.tokenStart;\n  var prefix = 0;\n\n  // hacks\n  if (this.scanner.tokenType === DELIM) {\n    switch (this.scanner.source.charCodeAt(this.scanner.tokenStart)) {\n      case ASTERISK:\n      case DOLLARSIGN:\n      case PLUSSIGN:\n      case NUMBERSIGN:\n      case AMPERSAND:\n        this.scanner.next();\n        break;\n\n      // TODO: not sure we should support this hack\n      case SOLIDUS:\n        this.scanner.next();\n        if (this.scanner.isDelim(SOLIDUS)) {\n          this.scanner.next();\n        }\n        break;\n    }\n  }\n  if (prefix) {\n    this.scanner.skip(prefix);\n  }\n  if (this.scanner.tokenType === HASH) {\n    this.eat(HASH);\n  } else {\n    this.eat(IDENT);\n  }\n  return this.scanner.substrToCursor(start);\n}\n\n// ! ws* important\nfunction getImportant() {\n  this.eat(DELIM);\n  this.scanner.skipSC();\n  var important = this.consume(IDENT);\n\n  // store original value in case it differ from `important`\n  // for better original source restoring and hacks like `!ie` support\n  return important === 'important' ? true : important;\n}","map":{"version":3,"names":["isCustomProperty","require","TYPE","rawMode","mode","IDENT","Ident","HASH","Hash","COLON","Colon","SEMICOLON","Semicolon","DELIM","Delim","WHITESPACE","WhiteSpace","EXCLAMATIONMARK","NUMBERSIGN","DOLLARSIGN","AMPERSAND","ASTERISK","PLUSSIGN","SOLIDUS","consumeValueRaw","startToken","Raw","exclamationMarkOrSemicolon","consumeCustomPropertyRaw","consumeValue","startValueToken","scanner","tokenIndex","value","Value","type","eof","tokenType","isDelim","isBalanceEdge","error","module","exports","name","structure","important","Boolean","String","property","parse","start","tokenStart","readProperty","call","customProperty","parseValue","parseCustomProperty","consumeRaw","skipSC","eat","valueStart","parseWithFallback","children","isEmpty","offset","lookupType","appendData","loc","getImportant","getLocation","generate","node","chunk","walkContext","prefix","source","charCodeAt","next","skip","substrToCursor","consume"],"sources":["/Users/jeffreyvanoosterwijk/Desktop/repos/resume-generator/node_modules/react-pdf-html/node_modules/css-tree/lib/syntax/node/Declaration.js"],"sourcesContent":["var isCustomProperty = require('../../utils/names').isCustomProperty;\nvar TYPE = require('../../tokenizer').TYPE;\nvar rawMode = require('./Raw').mode;\n\nvar IDENT = TYPE.Ident;\nvar HASH = TYPE.Hash;\nvar COLON = TYPE.Colon;\nvar SEMICOLON = TYPE.Semicolon;\nvar DELIM = TYPE.Delim;\nvar WHITESPACE = TYPE.WhiteSpace;\nvar EXCLAMATIONMARK = 0x0021; // U+0021 EXCLAMATION MARK (!)\nvar NUMBERSIGN = 0x0023;      // U+0023 NUMBER SIGN (#)\nvar DOLLARSIGN = 0x0024;      // U+0024 DOLLAR SIGN ($)\nvar AMPERSAND = 0x0026;       // U+0026 ANPERSAND (&)\nvar ASTERISK = 0x002A;        // U+002A ASTERISK (*)\nvar PLUSSIGN = 0x002B;        // U+002B PLUS SIGN (+)\nvar SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\n\nfunction consumeValueRaw(startToken) {\n    return this.Raw(startToken, rawMode.exclamationMarkOrSemicolon, true);\n}\n\nfunction consumeCustomPropertyRaw(startToken) {\n    return this.Raw(startToken, rawMode.exclamationMarkOrSemicolon, false);\n}\n\nfunction consumeValue() {\n    var startValueToken = this.scanner.tokenIndex;\n    var value = this.Value();\n\n    if (value.type !== 'Raw' &&\n        this.scanner.eof === false &&\n        this.scanner.tokenType !== SEMICOLON &&\n        this.scanner.isDelim(EXCLAMATIONMARK) === false &&\n        this.scanner.isBalanceEdge(startValueToken) === false) {\n        this.error();\n    }\n\n    return value;\n}\n\nmodule.exports = {\n    name: 'Declaration',\n    structure: {\n        important: [Boolean, String],\n        property: String,\n        value: ['Value', 'Raw']\n    },\n    parse: function() {\n        var start = this.scanner.tokenStart;\n        var startToken = this.scanner.tokenIndex;\n        var property = readProperty.call(this);\n        var customProperty = isCustomProperty(property);\n        var parseValue = customProperty ? this.parseCustomProperty : this.parseValue;\n        var consumeRaw = customProperty ? consumeCustomPropertyRaw : consumeValueRaw;\n        var important = false;\n        var value;\n\n        this.scanner.skipSC();\n        this.eat(COLON);\n\n        const valueStart = this.scanner.tokenIndex;\n\n        if (!customProperty) {\n            this.scanner.skipSC();\n        }\n\n        if (parseValue) {\n            value = this.parseWithFallback(consumeValue, consumeRaw);\n        } else {\n            value = consumeRaw.call(this, this.scanner.tokenIndex);\n        }\n\n        if (customProperty && value.type === 'Value' && value.children.isEmpty()) {\n            for (let offset = valueStart - this.scanner.tokenIndex; offset <= 0; offset++) {\n                if (this.scanner.lookupType(offset) === WHITESPACE) {\n                    value.children.appendData({\n                        type: 'WhiteSpace',\n                        loc: null,\n                        value: ' '\n                    });\n                    break;\n                }\n            }\n        }\n\n        if (this.scanner.isDelim(EXCLAMATIONMARK)) {\n            important = getImportant.call(this);\n            this.scanner.skipSC();\n        }\n\n        // Do not include semicolon to range per spec\n        // https://drafts.csswg.org/css-syntax/#declaration-diagram\n\n        if (this.scanner.eof === false &&\n            this.scanner.tokenType !== SEMICOLON &&\n            this.scanner.isBalanceEdge(startToken) === false) {\n            this.error();\n        }\n\n        return {\n            type: 'Declaration',\n            loc: this.getLocation(start, this.scanner.tokenStart),\n            important: important,\n            property: property,\n            value: value\n        };\n    },\n    generate: function(node) {\n        this.chunk(node.property);\n        this.chunk(':');\n        this.node(node.value);\n\n        if (node.important) {\n            this.chunk(node.important === true ? '!important' : '!' + node.important);\n        }\n    },\n    walkContext: 'declaration'\n};\n\nfunction readProperty() {\n    var start = this.scanner.tokenStart;\n    var prefix = 0;\n\n    // hacks\n    if (this.scanner.tokenType === DELIM) {\n        switch (this.scanner.source.charCodeAt(this.scanner.tokenStart)) {\n            case ASTERISK:\n            case DOLLARSIGN:\n            case PLUSSIGN:\n            case NUMBERSIGN:\n            case AMPERSAND:\n                this.scanner.next();\n                break;\n\n            // TODO: not sure we should support this hack\n            case SOLIDUS:\n                this.scanner.next();\n                if (this.scanner.isDelim(SOLIDUS)) {\n                    this.scanner.next();\n                }\n                break;\n        }\n    }\n\n    if (prefix) {\n        this.scanner.skip(prefix);\n    }\n\n    if (this.scanner.tokenType === HASH) {\n        this.eat(HASH);\n    } else {\n        this.eat(IDENT);\n    }\n\n    return this.scanner.substrToCursor(start);\n}\n\n// ! ws* important\nfunction getImportant() {\n    this.eat(DELIM);\n    this.scanner.skipSC();\n\n    var important = this.consume(IDENT);\n\n    // store original value in case it differ from `important`\n    // for better original source restoring and hacks like `!ie` support\n    return important === 'important' ? true : important;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}