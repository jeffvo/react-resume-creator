{"ast":null,"code":"var cmpChar = require('../../tokenizer').cmpChar;\nvar cmpStr = require('../../tokenizer').cmpStr;\nvar TYPE = require('../../tokenizer').TYPE;\nvar IDENT = TYPE.Ident;\nvar STRING = TYPE.String;\nvar NUMBER = TYPE.Number;\nvar FUNCTION = TYPE.Function;\nvar URL = TYPE.Url;\nvar HASH = TYPE.Hash;\nvar DIMENSION = TYPE.Dimension;\nvar PERCENTAGE = TYPE.Percentage;\nvar LEFTPARENTHESIS = TYPE.LeftParenthesis;\nvar LEFTSQUAREBRACKET = TYPE.LeftSquareBracket;\nvar COMMA = TYPE.Comma;\nvar DELIM = TYPE.Delim;\nvar NUMBERSIGN = 0x0023; // U+0023 NUMBER SIGN (#)\nvar ASTERISK = 0x002A; // U+002A ASTERISK (*)\nvar PLUSSIGN = 0x002B; // U+002B PLUS SIGN (+)\nvar HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\nvar SOLIDUS = 0x002F; // U+002F SOLIDUS (/)\nvar U = 0x0075; // U+0075 LATIN SMALL LETTER U (u)\n\nmodule.exports = function defaultRecognizer(context) {\n  switch (this.scanner.tokenType) {\n    case HASH:\n      return this.Hash();\n    case COMMA:\n      context.space = null;\n      context.ignoreWSAfter = true;\n      return this.Operator();\n    case LEFTPARENTHESIS:\n      return this.Parentheses(this.readSequence, context.recognizer);\n    case LEFTSQUAREBRACKET:\n      return this.Brackets(this.readSequence, context.recognizer);\n    case STRING:\n      return this.String();\n    case DIMENSION:\n      return this.Dimension();\n    case PERCENTAGE:\n      return this.Percentage();\n    case NUMBER:\n      return this.Number();\n    case FUNCTION:\n      return cmpStr(this.scanner.source, this.scanner.tokenStart, this.scanner.tokenEnd, 'url(') ? this.Url() : this.Function(this.readSequence, context.recognizer);\n    case URL:\n      return this.Url();\n    case IDENT:\n      // check for unicode range, it should start with u+ or U+\n      if (cmpChar(this.scanner.source, this.scanner.tokenStart, U) && cmpChar(this.scanner.source, this.scanner.tokenStart + 1, PLUSSIGN)) {\n        return this.UnicodeRange();\n      } else {\n        return this.Identifier();\n      }\n    case DELIM:\n      var code = this.scanner.source.charCodeAt(this.scanner.tokenStart);\n      if (code === SOLIDUS || code === ASTERISK || code === PLUSSIGN || code === HYPHENMINUS) {\n        return this.Operator(); // TODO: replace with Delim\n      }\n\n      // TODO: produce a node with Delim node type\n\n      if (code === NUMBERSIGN) {\n        this.error('Hex or identifier is expected', this.scanner.tokenStart + 1);\n      }\n      break;\n  }\n};","map":{"version":3,"names":["cmpChar","require","cmpStr","TYPE","IDENT","Ident","STRING","String","NUMBER","Number","FUNCTION","Function","URL","Url","HASH","Hash","DIMENSION","Dimension","PERCENTAGE","Percentage","LEFTPARENTHESIS","LeftParenthesis","LEFTSQUAREBRACKET","LeftSquareBracket","COMMA","Comma","DELIM","Delim","NUMBERSIGN","ASTERISK","PLUSSIGN","HYPHENMINUS","SOLIDUS","U","module","exports","defaultRecognizer","context","scanner","tokenType","space","ignoreWSAfter","Operator","Parentheses","readSequence","recognizer","Brackets","source","tokenStart","tokenEnd","UnicodeRange","Identifier","code","charCodeAt","error"],"sources":["/Users/jeffreyvanoosterwijk/Desktop/repos/resume-generator/node_modules/react-pdf-html/node_modules/css-tree/lib/syntax/scope/default.js"],"sourcesContent":["var cmpChar = require('../../tokenizer').cmpChar;\nvar cmpStr = require('../../tokenizer').cmpStr;\nvar TYPE = require('../../tokenizer').TYPE;\n\nvar IDENT = TYPE.Ident;\nvar STRING = TYPE.String;\nvar NUMBER = TYPE.Number;\nvar FUNCTION = TYPE.Function;\nvar URL = TYPE.Url;\nvar HASH = TYPE.Hash;\nvar DIMENSION = TYPE.Dimension;\nvar PERCENTAGE = TYPE.Percentage;\nvar LEFTPARENTHESIS = TYPE.LeftParenthesis;\nvar LEFTSQUAREBRACKET = TYPE.LeftSquareBracket;\nvar COMMA = TYPE.Comma;\nvar DELIM = TYPE.Delim;\nvar NUMBERSIGN = 0x0023;  // U+0023 NUMBER SIGN (#)\nvar ASTERISK = 0x002A;    // U+002A ASTERISK (*)\nvar PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\nvar HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\nvar SOLIDUS = 0x002F;     // U+002F SOLIDUS (/)\nvar U = 0x0075;           // U+0075 LATIN SMALL LETTER U (u)\n\nmodule.exports = function defaultRecognizer(context) {\n    switch (this.scanner.tokenType) {\n        case HASH:\n            return this.Hash();\n\n        case COMMA:\n            context.space = null;\n            context.ignoreWSAfter = true;\n            return this.Operator();\n\n        case LEFTPARENTHESIS:\n            return this.Parentheses(this.readSequence, context.recognizer);\n\n        case LEFTSQUAREBRACKET:\n            return this.Brackets(this.readSequence, context.recognizer);\n\n        case STRING:\n            return this.String();\n\n        case DIMENSION:\n            return this.Dimension();\n\n        case PERCENTAGE:\n            return this.Percentage();\n\n        case NUMBER:\n            return this.Number();\n\n        case FUNCTION:\n            return cmpStr(this.scanner.source, this.scanner.tokenStart, this.scanner.tokenEnd, 'url(')\n                ? this.Url()\n                : this.Function(this.readSequence, context.recognizer);\n\n        case URL:\n            return this.Url();\n\n        case IDENT:\n            // check for unicode range, it should start with u+ or U+\n            if (cmpChar(this.scanner.source, this.scanner.tokenStart, U) &&\n                cmpChar(this.scanner.source, this.scanner.tokenStart + 1, PLUSSIGN)) {\n                return this.UnicodeRange();\n            } else {\n                return this.Identifier();\n            }\n\n        case DELIM:\n            var code = this.scanner.source.charCodeAt(this.scanner.tokenStart);\n\n            if (code === SOLIDUS ||\n                code === ASTERISK ||\n                code === PLUSSIGN ||\n                code === HYPHENMINUS) {\n                return this.Operator(); // TODO: replace with Delim\n            }\n\n            // TODO: produce a node with Delim node type\n\n            if (code === NUMBERSIGN) {\n                this.error('Hex or identifier is expected', this.scanner.tokenStart + 1);\n            }\n\n            break;\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}