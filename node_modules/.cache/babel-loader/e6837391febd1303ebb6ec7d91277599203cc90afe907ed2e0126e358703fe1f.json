{"ast":null,"code":"var List = require('../common/List');\nfunction getFirstMatchNode(matchNode) {\n  if ('node' in matchNode) {\n    return matchNode.node;\n  }\n  return getFirstMatchNode(matchNode.match[0]);\n}\nfunction getLastMatchNode(matchNode) {\n  if ('node' in matchNode) {\n    return matchNode.node;\n  }\n  return getLastMatchNode(matchNode.match[matchNode.match.length - 1]);\n}\nfunction matchFragments(lexer, ast, match, type, name) {\n  function findFragments(matchNode) {\n    if (matchNode.syntax !== null && matchNode.syntax.type === type && matchNode.syntax.name === name) {\n      var start = getFirstMatchNode(matchNode);\n      var end = getLastMatchNode(matchNode);\n      lexer.syntax.walk(ast, function (node, item, list) {\n        if (node === start) {\n          var nodes = new List();\n          do {\n            nodes.appendData(item.data);\n            if (item.data === end) {\n              break;\n            }\n            item = item.next;\n          } while (item !== null);\n          fragments.push({\n            parent: list,\n            nodes: nodes\n          });\n        }\n      });\n    }\n    if (Array.isArray(matchNode.match)) {\n      matchNode.match.forEach(findFragments);\n    }\n  }\n  var fragments = [];\n  if (match.matched !== null) {\n    findFragments(match.matched);\n  }\n  return fragments;\n}\nmodule.exports = {\n  matchFragments: matchFragments\n};","map":{"version":3,"names":["List","require","getFirstMatchNode","matchNode","node","match","getLastMatchNode","length","matchFragments","lexer","ast","type","name","findFragments","syntax","start","end","walk","item","list","nodes","appendData","data","next","fragments","push","parent","Array","isArray","forEach","matched","module","exports"],"sources":["/Users/jeffreyvanoosterwijk/Desktop/repos/resume-generator/node_modules/react-pdf-html/node_modules/css-tree/lib/lexer/search.js"],"sourcesContent":["var List = require('../common/List');\n\nfunction getFirstMatchNode(matchNode) {\n    if ('node' in matchNode) {\n        return matchNode.node;\n    }\n\n    return getFirstMatchNode(matchNode.match[0]);\n}\n\nfunction getLastMatchNode(matchNode) {\n    if ('node' in matchNode) {\n        return matchNode.node;\n    }\n\n    return getLastMatchNode(matchNode.match[matchNode.match.length - 1]);\n}\n\nfunction matchFragments(lexer, ast, match, type, name) {\n    function findFragments(matchNode) {\n        if (matchNode.syntax !== null &&\n            matchNode.syntax.type === type &&\n            matchNode.syntax.name === name) {\n            var start = getFirstMatchNode(matchNode);\n            var end = getLastMatchNode(matchNode);\n\n            lexer.syntax.walk(ast, function(node, item, list) {\n                if (node === start) {\n                    var nodes = new List();\n\n                    do {\n                        nodes.appendData(item.data);\n\n                        if (item.data === end) {\n                            break;\n                        }\n\n                        item = item.next;\n                    } while (item !== null);\n\n                    fragments.push({\n                        parent: list,\n                        nodes: nodes\n                    });\n                }\n            });\n        }\n\n        if (Array.isArray(matchNode.match)) {\n            matchNode.match.forEach(findFragments);\n        }\n    }\n\n    var fragments = [];\n\n    if (match.matched !== null) {\n        findFragments(match.matched);\n    }\n\n    return fragments;\n}\n\nmodule.exports = {\n    matchFragments: matchFragments\n};\n"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAEpC,SAASC,iBAAiBA,CAACC,SAAS,EAAE;EAClC,IAAI,MAAM,IAAIA,SAAS,EAAE;IACrB,OAAOA,SAAS,CAACC,IAAI;EACzB;EAEA,OAAOF,iBAAiB,CAACC,SAAS,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC;AAChD;AAEA,SAASC,gBAAgBA,CAACH,SAAS,EAAE;EACjC,IAAI,MAAM,IAAIA,SAAS,EAAE;IACrB,OAAOA,SAAS,CAACC,IAAI;EACzB;EAEA,OAAOE,gBAAgB,CAACH,SAAS,CAACE,KAAK,CAACF,SAAS,CAACE,KAAK,CAACE,MAAM,GAAG,CAAC,CAAC,CAAC;AACxE;AAEA,SAASC,cAAcA,CAACC,KAAK,EAAEC,GAAG,EAAEL,KAAK,EAAEM,IAAI,EAAEC,IAAI,EAAE;EACnD,SAASC,aAAaA,CAACV,SAAS,EAAE;IAC9B,IAAIA,SAAS,CAACW,MAAM,KAAK,IAAI,IACzBX,SAAS,CAACW,MAAM,CAACH,IAAI,KAAKA,IAAI,IAC9BR,SAAS,CAACW,MAAM,CAACF,IAAI,KAAKA,IAAI,EAAE;MAChC,IAAIG,KAAK,GAAGb,iBAAiB,CAACC,SAAS,CAAC;MACxC,IAAIa,GAAG,GAAGV,gBAAgB,CAACH,SAAS,CAAC;MAErCM,KAAK,CAACK,MAAM,CAACG,IAAI,CAACP,GAAG,EAAE,UAASN,IAAI,EAAEc,IAAI,EAAEC,IAAI,EAAE;QAC9C,IAAIf,IAAI,KAAKW,KAAK,EAAE;UAChB,IAAIK,KAAK,GAAG,IAAIpB,IAAI,CAAC,CAAC;UAEtB,GAAG;YACCoB,KAAK,CAACC,UAAU,CAACH,IAAI,CAACI,IAAI,CAAC;YAE3B,IAAIJ,IAAI,CAACI,IAAI,KAAKN,GAAG,EAAE;cACnB;YACJ;YAEAE,IAAI,GAAGA,IAAI,CAACK,IAAI;UACpB,CAAC,QAAQL,IAAI,KAAK,IAAI;UAEtBM,SAAS,CAACC,IAAI,CAAC;YACXC,MAAM,EAAEP,IAAI;YACZC,KAAK,EAAEA;UACX,CAAC,CAAC;QACN;MACJ,CAAC,CAAC;IACN;IAEA,IAAIO,KAAK,CAACC,OAAO,CAACzB,SAAS,CAACE,KAAK,CAAC,EAAE;MAChCF,SAAS,CAACE,KAAK,CAACwB,OAAO,CAAChB,aAAa,CAAC;IAC1C;EACJ;EAEA,IAAIW,SAAS,GAAG,EAAE;EAElB,IAAInB,KAAK,CAACyB,OAAO,KAAK,IAAI,EAAE;IACxBjB,aAAa,CAACR,KAAK,CAACyB,OAAO,CAAC;EAChC;EAEA,OAAON,SAAS;AACpB;AAEAO,MAAM,CAACC,OAAO,GAAG;EACbxB,cAAc,EAAEA;AACpB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}