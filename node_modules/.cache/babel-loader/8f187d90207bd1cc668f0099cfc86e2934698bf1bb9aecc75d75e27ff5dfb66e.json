{"ast":null,"code":"var tokenizer = require('../tokenizer');\nvar isIdentifierStart = tokenizer.isIdentifierStart;\nvar isHexDigit = tokenizer.isHexDigit;\nvar isDigit = tokenizer.isDigit;\nvar cmpStr = tokenizer.cmpStr;\nvar consumeNumber = tokenizer.consumeNumber;\nvar TYPE = tokenizer.TYPE;\nvar anPlusB = require('./generic-an-plus-b');\nvar urange = require('./generic-urange');\nvar cssWideKeywords = ['unset', 'initial', 'inherit'];\nvar calcFunctionNames = ['calc(', '-moz-calc(', '-webkit-calc('];\n\n// https://www.w3.org/TR/css-values-3/#lengths\nvar LENGTH = {\n  // absolute length units\n  'px': true,\n  'mm': true,\n  'cm': true,\n  'in': true,\n  'pt': true,\n  'pc': true,\n  'q': true,\n  // relative length units\n  'em': true,\n  'ex': true,\n  'ch': true,\n  'rem': true,\n  // viewport-percentage lengths\n  'vh': true,\n  'vw': true,\n  'vmin': true,\n  'vmax': true,\n  'vm': true\n};\nvar ANGLE = {\n  'deg': true,\n  'grad': true,\n  'rad': true,\n  'turn': true\n};\nvar TIME = {\n  's': true,\n  'ms': true\n};\nvar FREQUENCY = {\n  'hz': true,\n  'khz': true\n};\n\n// https://www.w3.org/TR/css-values-3/#resolution (https://drafts.csswg.org/css-values/#resolution)\nvar RESOLUTION = {\n  'dpi': true,\n  'dpcm': true,\n  'dppx': true,\n  'x': true // https://github.com/w3c/csswg-drafts/issues/461\n};\n\n// https://drafts.csswg.org/css-grid/#fr-unit\nvar FLEX = {\n  'fr': true\n};\n\n// https://www.w3.org/TR/css3-speech/#mixing-props-voice-volume\nvar DECIBEL = {\n  'db': true\n};\n\n// https://www.w3.org/TR/css3-speech/#voice-props-voice-pitch\nvar SEMITONES = {\n  'st': true\n};\n\n// safe char code getter\nfunction charCode(str, index) {\n  return index < str.length ? str.charCodeAt(index) : 0;\n}\nfunction eqStr(actual, expected) {\n  return cmpStr(actual, 0, actual.length, expected);\n}\nfunction eqStrAny(actual, expected) {\n  for (var i = 0; i < expected.length; i++) {\n    if (eqStr(actual, expected[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n\n// IE postfix hack, i.e. 123\\0 or 123px\\9\nfunction isPostfixIeHack(str, offset) {\n  if (offset !== str.length - 2) {\n    return false;\n  }\n  return str.charCodeAt(offset) === 0x005C &&\n  // U+005C REVERSE SOLIDUS (\\)\n  isDigit(str.charCodeAt(offset + 1));\n}\nfunction outOfRange(opts, value, numEnd) {\n  if (opts && opts.type === 'Range') {\n    var num = Number(numEnd !== undefined && numEnd !== value.length ? value.substr(0, numEnd) : value);\n    if (isNaN(num)) {\n      return true;\n    }\n    if (opts.min !== null && num < opts.min) {\n      return true;\n    }\n    if (opts.max !== null && num > opts.max) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction consumeFunction(token, getNextToken) {\n  var startIdx = token.index;\n  var length = 0;\n\n  // balanced token consuming\n  do {\n    length++;\n    if (token.balance <= startIdx) {\n      break;\n    }\n  } while (token = getNextToken(length));\n  return length;\n}\n\n// TODO: implement\n// can be used wherever <length>, <frequency>, <angle>, <time>, <percentage>, <number>, or <integer> values are allowed\n// https://drafts.csswg.org/css-values/#calc-notation\nfunction calc(next) {\n  return function (token, getNextToken, opts) {\n    if (token === null) {\n      return 0;\n    }\n    if (token.type === TYPE.Function && eqStrAny(token.value, calcFunctionNames)) {\n      return consumeFunction(token, getNextToken);\n    }\n    return next(token, getNextToken, opts);\n  };\n}\nfunction tokenType(expectedTokenType) {\n  return function (token) {\n    if (token === null || token.type !== expectedTokenType) {\n      return 0;\n    }\n    return 1;\n  };\n}\nfunction func(name) {\n  name = name + '(';\n  return function (token, getNextToken) {\n    if (token !== null && eqStr(token.value, name)) {\n      return consumeFunction(token, getNextToken);\n    }\n    return 0;\n  };\n}\n\n// =========================\n// Complex types\n//\n\n// https://drafts.csswg.org/css-values-4/#custom-idents\n// 4.2. Author-defined Identifiers: the <custom-ident> type\n// Some properties accept arbitrary author-defined identifiers as a component value.\n// This generic data type is denoted by <custom-ident>, and represents any valid CSS identifier\n// that would not be misinterpreted as a pre-defined keyword in that property’s value definition.\n//\n// See also: https://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident\nfunction customIdent(token) {\n  if (token === null || token.type !== TYPE.Ident) {\n    return 0;\n  }\n  var name = token.value.toLowerCase();\n\n  // The CSS-wide keywords are not valid <custom-ident>s\n  if (eqStrAny(name, cssWideKeywords)) {\n    return 0;\n  }\n\n  // The default keyword is reserved and is also not a valid <custom-ident>\n  if (eqStr(name, 'default')) {\n    return 0;\n  }\n\n  // TODO: ignore property specific keywords (as described https://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident)\n  // Specifications using <custom-ident> must specify clearly what other keywords\n  // are excluded from <custom-ident>, if any—for example by saying that any pre-defined keywords\n  // in that property’s value definition are excluded. Excluded keywords are excluded\n  // in all ASCII case permutations.\n\n  return 1;\n}\n\n// https://drafts.csswg.org/css-variables/#typedef-custom-property-name\n// A custom property is any property whose name starts with two dashes (U+002D HYPHEN-MINUS), like --foo.\n// The <custom-property-name> production corresponds to this: it’s defined as any valid identifier\n// that starts with two dashes, except -- itself, which is reserved for future use by CSS.\n// NOTE: Current implementation treat `--` as a valid name since most (all?) major browsers treat it as valid.\nfunction customPropertyName(token) {\n  // ... defined as any valid identifier\n  if (token === null || token.type !== TYPE.Ident) {\n    return 0;\n  }\n\n  // ... that starts with two dashes (U+002D HYPHEN-MINUS)\n  if (charCode(token.value, 0) !== 0x002D || charCode(token.value, 1) !== 0x002D) {\n    return 0;\n  }\n  return 1;\n}\n\n// https://drafts.csswg.org/css-color-4/#hex-notation\n// The syntax of a <hex-color> is a <hash-token> token whose value consists of 3, 4, 6, or 8 hexadecimal digits.\n// In other words, a hex color is written as a hash character, \"#\", followed by some number of digits 0-9 or\n// letters a-f (the case of the letters doesn’t matter - #00ff00 is identical to #00FF00).\nfunction hexColor(token) {\n  if (token === null || token.type !== TYPE.Hash) {\n    return 0;\n  }\n  var length = token.value.length;\n\n  // valid values (length): #rgb (4), #rgba (5), #rrggbb (7), #rrggbbaa (9)\n  if (length !== 4 && length !== 5 && length !== 7 && length !== 9) {\n    return 0;\n  }\n  for (var i = 1; i < length; i++) {\n    if (!isHexDigit(token.value.charCodeAt(i))) {\n      return 0;\n    }\n  }\n  return 1;\n}\nfunction idSelector(token) {\n  if (token === null || token.type !== TYPE.Hash) {\n    return 0;\n  }\n  if (!isIdentifierStart(charCode(token.value, 1), charCode(token.value, 2), charCode(token.value, 3))) {\n    return 0;\n  }\n  return 1;\n}\n\n// https://drafts.csswg.org/css-syntax/#any-value\n// It represents the entirety of what a valid declaration can have as its value.\nfunction declarationValue(token, getNextToken) {\n  if (!token) {\n    return 0;\n  }\n  var length = 0;\n  var level = 0;\n  var startIdx = token.index;\n\n  // The <declaration-value> production matches any sequence of one or more tokens,\n  // so long as the sequence ...\n  scan: do {\n    switch (token.type) {\n      // ... does not contain <bad-string-token>, <bad-url-token>,\n      case TYPE.BadString:\n      case TYPE.BadUrl:\n        break scan;\n\n      // ... unmatched <)-token>, <]-token>, or <}-token>,\n      case TYPE.RightCurlyBracket:\n      case TYPE.RightParenthesis:\n      case TYPE.RightSquareBracket:\n        if (token.balance > token.index || token.balance < startIdx) {\n          break scan;\n        }\n        level--;\n        break;\n\n      // ... or top-level <semicolon-token> tokens\n      case TYPE.Semicolon:\n        if (level === 0) {\n          break scan;\n        }\n        break;\n\n      // ... or <delim-token> tokens with a value of \"!\"\n      case TYPE.Delim:\n        if (token.value === '!' && level === 0) {\n          break scan;\n        }\n        break;\n      case TYPE.Function:\n      case TYPE.LeftParenthesis:\n      case TYPE.LeftSquareBracket:\n      case TYPE.LeftCurlyBracket:\n        level++;\n        break;\n    }\n    length++;\n\n    // until balance closing\n    if (token.balance <= startIdx) {\n      break;\n    }\n  } while (token = getNextToken(length));\n  return length;\n}\n\n// https://drafts.csswg.org/css-syntax/#any-value\n// The <any-value> production is identical to <declaration-value>, but also\n// allows top-level <semicolon-token> tokens and <delim-token> tokens\n// with a value of \"!\". It represents the entirety of what valid CSS can be in any context.\nfunction anyValue(token, getNextToken) {\n  if (!token) {\n    return 0;\n  }\n  var startIdx = token.index;\n  var length = 0;\n\n  // The <any-value> production matches any sequence of one or more tokens,\n  // so long as the sequence ...\n  scan: do {\n    switch (token.type) {\n      // ... does not contain <bad-string-token>, <bad-url-token>,\n      case TYPE.BadString:\n      case TYPE.BadUrl:\n        break scan;\n\n      // ... unmatched <)-token>, <]-token>, or <}-token>,\n      case TYPE.RightCurlyBracket:\n      case TYPE.RightParenthesis:\n      case TYPE.RightSquareBracket:\n        if (token.balance > token.index || token.balance < startIdx) {\n          break scan;\n        }\n        break;\n    }\n    length++;\n\n    // until balance closing\n    if (token.balance <= startIdx) {\n      break;\n    }\n  } while (token = getNextToken(length));\n  return length;\n}\n\n// =========================\n// Dimensions\n//\n\nfunction dimension(type) {\n  return function (token, getNextToken, opts) {\n    if (token === null || token.type !== TYPE.Dimension) {\n      return 0;\n    }\n    var numberEnd = consumeNumber(token.value, 0);\n\n    // check unit\n    if (type !== null) {\n      // check for IE postfix hack, i.e. 123px\\0 or 123px\\9\n      var reverseSolidusOffset = token.value.indexOf('\\\\', numberEnd);\n      var unit = reverseSolidusOffset === -1 || !isPostfixIeHack(token.value, reverseSolidusOffset) ? token.value.substr(numberEnd) : token.value.substring(numberEnd, reverseSolidusOffset);\n      if (type.hasOwnProperty(unit.toLowerCase()) === false) {\n        return 0;\n      }\n    }\n\n    // check range if specified\n    if (outOfRange(opts, token.value, numberEnd)) {\n      return 0;\n    }\n    return 1;\n  };\n}\n\n// =========================\n// Percentage\n//\n\n// §5.5. Percentages: the <percentage> type\n// https://drafts.csswg.org/css-values-4/#percentages\nfunction percentage(token, getNextToken, opts) {\n  // ... corresponds to the <percentage-token> production\n  if (token === null || token.type !== TYPE.Percentage) {\n    return 0;\n  }\n\n  // check range if specified\n  if (outOfRange(opts, token.value, token.value.length - 1)) {\n    return 0;\n  }\n  return 1;\n}\n\n// =========================\n// Numeric\n//\n\n// https://drafts.csswg.org/css-values-4/#numbers\n// The value <zero> represents a literal number with the value 0. Expressions that merely\n// evaluate to a <number> with the value 0 (for example, calc(0)) do not match <zero>;\n// only literal <number-token>s do.\nfunction zero(next) {\n  if (typeof next !== 'function') {\n    next = function () {\n      return 0;\n    };\n  }\n  return function (token, getNextToken, opts) {\n    if (token !== null && token.type === TYPE.Number) {\n      if (Number(token.value) === 0) {\n        return 1;\n      }\n    }\n    return next(token, getNextToken, opts);\n  };\n}\n\n// § 5.3. Real Numbers: the <number> type\n// https://drafts.csswg.org/css-values-4/#numbers\n// Number values are denoted by <number>, and represent real numbers, possibly with a fractional component.\n// ... It corresponds to the <number-token> production\nfunction number(token, getNextToken, opts) {\n  if (token === null) {\n    return 0;\n  }\n  var numberEnd = consumeNumber(token.value, 0);\n  var isNumber = numberEnd === token.value.length;\n  if (!isNumber && !isPostfixIeHack(token.value, numberEnd)) {\n    return 0;\n  }\n\n  // check range if specified\n  if (outOfRange(opts, token.value, numberEnd)) {\n    return 0;\n  }\n  return 1;\n}\n\n// §5.2. Integers: the <integer> type\n// https://drafts.csswg.org/css-values-4/#integers\nfunction integer(token, getNextToken, opts) {\n  // ... corresponds to a subset of the <number-token> production\n  if (token === null || token.type !== TYPE.Number) {\n    return 0;\n  }\n\n  // The first digit of an integer may be immediately preceded by `-` or `+` to indicate the integer’s sign.\n  var i = token.value.charCodeAt(0) === 0x002B ||\n  // U+002B PLUS SIGN (+)\n  token.value.charCodeAt(0) === 0x002D ? 1 : 0; // U+002D HYPHEN-MINUS (-)\n\n  // When written literally, an integer is one or more decimal digits 0 through 9 ...\n  for (; i < token.value.length; i++) {\n    if (!isDigit(token.value.charCodeAt(i))) {\n      return 0;\n    }\n  }\n\n  // check range if specified\n  if (outOfRange(opts, token.value, i)) {\n    return 0;\n  }\n  return 1;\n}\nmodule.exports = {\n  // token types\n  'ident-token': tokenType(TYPE.Ident),\n  'function-token': tokenType(TYPE.Function),\n  'at-keyword-token': tokenType(TYPE.AtKeyword),\n  'hash-token': tokenType(TYPE.Hash),\n  'string-token': tokenType(TYPE.String),\n  'bad-string-token': tokenType(TYPE.BadString),\n  'url-token': tokenType(TYPE.Url),\n  'bad-url-token': tokenType(TYPE.BadUrl),\n  'delim-token': tokenType(TYPE.Delim),\n  'number-token': tokenType(TYPE.Number),\n  'percentage-token': tokenType(TYPE.Percentage),\n  'dimension-token': tokenType(TYPE.Dimension),\n  'whitespace-token': tokenType(TYPE.WhiteSpace),\n  'CDO-token': tokenType(TYPE.CDO),\n  'CDC-token': tokenType(TYPE.CDC),\n  'colon-token': tokenType(TYPE.Colon),\n  'semicolon-token': tokenType(TYPE.Semicolon),\n  'comma-token': tokenType(TYPE.Comma),\n  '[-token': tokenType(TYPE.LeftSquareBracket),\n  ']-token': tokenType(TYPE.RightSquareBracket),\n  '(-token': tokenType(TYPE.LeftParenthesis),\n  ')-token': tokenType(TYPE.RightParenthesis),\n  '{-token': tokenType(TYPE.LeftCurlyBracket),\n  '}-token': tokenType(TYPE.RightCurlyBracket),\n  // token type aliases\n  'string': tokenType(TYPE.String),\n  'ident': tokenType(TYPE.Ident),\n  // complex types\n  'custom-ident': customIdent,\n  'custom-property-name': customPropertyName,\n  'hex-color': hexColor,\n  'id-selector': idSelector,\n  // element( <id-selector> )\n  'an-plus-b': anPlusB,\n  'urange': urange,\n  'declaration-value': declarationValue,\n  'any-value': anyValue,\n  // dimensions\n  'dimension': calc(dimension(null)),\n  'angle': calc(dimension(ANGLE)),\n  'decibel': calc(dimension(DECIBEL)),\n  'frequency': calc(dimension(FREQUENCY)),\n  'flex': calc(dimension(FLEX)),\n  'length': calc(zero(dimension(LENGTH))),\n  'resolution': calc(dimension(RESOLUTION)),\n  'semitones': calc(dimension(SEMITONES)),\n  'time': calc(dimension(TIME)),\n  // percentage\n  'percentage': calc(percentage),\n  // numeric\n  'zero': zero(),\n  'number': calc(number),\n  'integer': calc(integer),\n  // old IE stuff\n  '-ms-legacy-expression': func('expression')\n};","map":{"version":3,"names":["tokenizer","require","isIdentifierStart","isHexDigit","isDigit","cmpStr","consumeNumber","TYPE","anPlusB","urange","cssWideKeywords","calcFunctionNames","LENGTH","ANGLE","TIME","FREQUENCY","RESOLUTION","FLEX","DECIBEL","SEMITONES","charCode","str","index","length","charCodeAt","eqStr","actual","expected","eqStrAny","i","isPostfixIeHack","offset","outOfRange","opts","value","numEnd","type","num","Number","undefined","substr","isNaN","min","max","consumeFunction","token","getNextToken","startIdx","balance","calc","next","Function","tokenType","expectedTokenType","func","name","customIdent","Ident","toLowerCase","customPropertyName","hexColor","Hash","idSelector","declarationValue","level","scan","BadString","BadUrl","RightCurlyBracket","RightParenthesis","RightSquareBracket","Semicolon","Delim","LeftParenthesis","LeftSquareBracket","LeftCurlyBracket","anyValue","dimension","Dimension","numberEnd","reverseSolidusOffset","indexOf","unit","substring","hasOwnProperty","percentage","Percentage","zero","number","isNumber","integer","module","exports","AtKeyword","String","Url","WhiteSpace","CDO","CDC","Colon","Comma"],"sources":["/Users/jeffreyvanoosterwijk/Desktop/repos/resume-generator/node_modules/react-pdf-html/node_modules/css-tree/lib/lexer/generic.js"],"sourcesContent":["var tokenizer = require('../tokenizer');\nvar isIdentifierStart = tokenizer.isIdentifierStart;\nvar isHexDigit = tokenizer.isHexDigit;\nvar isDigit = tokenizer.isDigit;\nvar cmpStr = tokenizer.cmpStr;\nvar consumeNumber = tokenizer.consumeNumber;\nvar TYPE = tokenizer.TYPE;\nvar anPlusB = require('./generic-an-plus-b');\nvar urange = require('./generic-urange');\n\nvar cssWideKeywords = ['unset', 'initial', 'inherit'];\nvar calcFunctionNames = ['calc(', '-moz-calc(', '-webkit-calc('];\n\n// https://www.w3.org/TR/css-values-3/#lengths\nvar LENGTH = {\n    // absolute length units\n    'px': true,\n    'mm': true,\n    'cm': true,\n    'in': true,\n    'pt': true,\n    'pc': true,\n    'q': true,\n\n    // relative length units\n    'em': true,\n    'ex': true,\n    'ch': true,\n    'rem': true,\n\n    // viewport-percentage lengths\n    'vh': true,\n    'vw': true,\n    'vmin': true,\n    'vmax': true,\n    'vm': true\n};\n\nvar ANGLE = {\n    'deg': true,\n    'grad': true,\n    'rad': true,\n    'turn': true\n};\n\nvar TIME = {\n    's': true,\n    'ms': true\n};\n\nvar FREQUENCY = {\n    'hz': true,\n    'khz': true\n};\n\n// https://www.w3.org/TR/css-values-3/#resolution (https://drafts.csswg.org/css-values/#resolution)\nvar RESOLUTION = {\n    'dpi': true,\n    'dpcm': true,\n    'dppx': true,\n    'x': true      // https://github.com/w3c/csswg-drafts/issues/461\n};\n\n// https://drafts.csswg.org/css-grid/#fr-unit\nvar FLEX = {\n    'fr': true\n};\n\n// https://www.w3.org/TR/css3-speech/#mixing-props-voice-volume\nvar DECIBEL = {\n    'db': true\n};\n\n// https://www.w3.org/TR/css3-speech/#voice-props-voice-pitch\nvar SEMITONES = {\n    'st': true\n};\n\n// safe char code getter\nfunction charCode(str, index) {\n    return index < str.length ? str.charCodeAt(index) : 0;\n}\n\nfunction eqStr(actual, expected) {\n    return cmpStr(actual, 0, actual.length, expected);\n}\n\nfunction eqStrAny(actual, expected) {\n    for (var i = 0; i < expected.length; i++) {\n        if (eqStr(actual, expected[i])) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n// IE postfix hack, i.e. 123\\0 or 123px\\9\nfunction isPostfixIeHack(str, offset) {\n    if (offset !== str.length - 2) {\n        return false;\n    }\n\n    return (\n        str.charCodeAt(offset) === 0x005C &&  // U+005C REVERSE SOLIDUS (\\)\n        isDigit(str.charCodeAt(offset + 1))\n    );\n}\n\nfunction outOfRange(opts, value, numEnd) {\n    if (opts && opts.type === 'Range') {\n        var num = Number(\n            numEnd !== undefined && numEnd !== value.length\n                ? value.substr(0, numEnd)\n                : value\n        );\n\n        if (isNaN(num)) {\n            return true;\n        }\n\n        if (opts.min !== null && num < opts.min) {\n            return true;\n        }\n\n        if (opts.max !== null && num > opts.max) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction consumeFunction(token, getNextToken) {\n    var startIdx = token.index;\n    var length = 0;\n\n    // balanced token consuming\n    do {\n        length++;\n\n        if (token.balance <= startIdx) {\n            break;\n        }\n    } while (token = getNextToken(length));\n\n    return length;\n}\n\n// TODO: implement\n// can be used wherever <length>, <frequency>, <angle>, <time>, <percentage>, <number>, or <integer> values are allowed\n// https://drafts.csswg.org/css-values/#calc-notation\nfunction calc(next) {\n    return function(token, getNextToken, opts) {\n        if (token === null) {\n            return 0;\n        }\n\n        if (token.type === TYPE.Function && eqStrAny(token.value, calcFunctionNames)) {\n            return consumeFunction(token, getNextToken);\n        }\n\n        return next(token, getNextToken, opts);\n    };\n}\n\nfunction tokenType(expectedTokenType) {\n    return function(token) {\n        if (token === null || token.type !== expectedTokenType) {\n            return 0;\n        }\n\n        return 1;\n    };\n}\n\nfunction func(name) {\n    name = name + '(';\n\n    return function(token, getNextToken) {\n        if (token !== null && eqStr(token.value, name)) {\n            return consumeFunction(token, getNextToken);\n        }\n\n        return 0;\n    };\n}\n\n// =========================\n// Complex types\n//\n\n// https://drafts.csswg.org/css-values-4/#custom-idents\n// 4.2. Author-defined Identifiers: the <custom-ident> type\n// Some properties accept arbitrary author-defined identifiers as a component value.\n// This generic data type is denoted by <custom-ident>, and represents any valid CSS identifier\n// that would not be misinterpreted as a pre-defined keyword in that property’s value definition.\n//\n// See also: https://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident\nfunction customIdent(token) {\n    if (token === null || token.type !== TYPE.Ident) {\n        return 0;\n    }\n\n    var name = token.value.toLowerCase();\n\n    // The CSS-wide keywords are not valid <custom-ident>s\n    if (eqStrAny(name, cssWideKeywords)) {\n        return 0;\n    }\n\n    // The default keyword is reserved and is also not a valid <custom-ident>\n    if (eqStr(name, 'default')) {\n        return 0;\n    }\n\n    // TODO: ignore property specific keywords (as described https://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident)\n    // Specifications using <custom-ident> must specify clearly what other keywords\n    // are excluded from <custom-ident>, if any—for example by saying that any pre-defined keywords\n    // in that property’s value definition are excluded. Excluded keywords are excluded\n    // in all ASCII case permutations.\n\n    return 1;\n}\n\n// https://drafts.csswg.org/css-variables/#typedef-custom-property-name\n// A custom property is any property whose name starts with two dashes (U+002D HYPHEN-MINUS), like --foo.\n// The <custom-property-name> production corresponds to this: it’s defined as any valid identifier\n// that starts with two dashes, except -- itself, which is reserved for future use by CSS.\n// NOTE: Current implementation treat `--` as a valid name since most (all?) major browsers treat it as valid.\nfunction customPropertyName(token) {\n    // ... defined as any valid identifier\n    if (token === null || token.type !== TYPE.Ident) {\n        return 0;\n    }\n\n    // ... that starts with two dashes (U+002D HYPHEN-MINUS)\n    if (charCode(token.value, 0) !== 0x002D || charCode(token.value, 1) !== 0x002D) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// https://drafts.csswg.org/css-color-4/#hex-notation\n// The syntax of a <hex-color> is a <hash-token> token whose value consists of 3, 4, 6, or 8 hexadecimal digits.\n// In other words, a hex color is written as a hash character, \"#\", followed by some number of digits 0-9 or\n// letters a-f (the case of the letters doesn’t matter - #00ff00 is identical to #00FF00).\nfunction hexColor(token) {\n    if (token === null || token.type !== TYPE.Hash) {\n        return 0;\n    }\n\n    var length = token.value.length;\n\n    // valid values (length): #rgb (4), #rgba (5), #rrggbb (7), #rrggbbaa (9)\n    if (length !== 4 && length !== 5 && length !== 7 && length !== 9) {\n        return 0;\n    }\n\n    for (var i = 1; i < length; i++) {\n        if (!isHexDigit(token.value.charCodeAt(i))) {\n            return 0;\n        }\n    }\n\n    return 1;\n}\n\nfunction idSelector(token) {\n    if (token === null || token.type !== TYPE.Hash) {\n        return 0;\n    }\n\n    if (!isIdentifierStart(charCode(token.value, 1), charCode(token.value, 2), charCode(token.value, 3))) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// https://drafts.csswg.org/css-syntax/#any-value\n// It represents the entirety of what a valid declaration can have as its value.\nfunction declarationValue(token, getNextToken) {\n    if (!token) {\n        return 0;\n    }\n\n    var length = 0;\n    var level = 0;\n    var startIdx = token.index;\n\n    // The <declaration-value> production matches any sequence of one or more tokens,\n    // so long as the sequence ...\n    scan:\n    do {\n        switch (token.type) {\n            // ... does not contain <bad-string-token>, <bad-url-token>,\n            case TYPE.BadString:\n            case TYPE.BadUrl:\n                break scan;\n\n            // ... unmatched <)-token>, <]-token>, or <}-token>,\n            case TYPE.RightCurlyBracket:\n            case TYPE.RightParenthesis:\n            case TYPE.RightSquareBracket:\n                if (token.balance > token.index || token.balance < startIdx) {\n                    break scan;\n                }\n\n                level--;\n                break;\n\n            // ... or top-level <semicolon-token> tokens\n            case TYPE.Semicolon:\n                if (level === 0) {\n                    break scan;\n                }\n\n                break;\n\n            // ... or <delim-token> tokens with a value of \"!\"\n            case TYPE.Delim:\n                if (token.value === '!' && level === 0) {\n                    break scan;\n                }\n\n                break;\n\n            case TYPE.Function:\n            case TYPE.LeftParenthesis:\n            case TYPE.LeftSquareBracket:\n            case TYPE.LeftCurlyBracket:\n                level++;\n                break;\n        }\n\n        length++;\n\n        // until balance closing\n        if (token.balance <= startIdx) {\n            break;\n        }\n    } while (token = getNextToken(length));\n\n    return length;\n}\n\n// https://drafts.csswg.org/css-syntax/#any-value\n// The <any-value> production is identical to <declaration-value>, but also\n// allows top-level <semicolon-token> tokens and <delim-token> tokens\n// with a value of \"!\". It represents the entirety of what valid CSS can be in any context.\nfunction anyValue(token, getNextToken) {\n    if (!token) {\n        return 0;\n    }\n\n    var startIdx = token.index;\n    var length = 0;\n\n    // The <any-value> production matches any sequence of one or more tokens,\n    // so long as the sequence ...\n    scan:\n    do {\n        switch (token.type) {\n            // ... does not contain <bad-string-token>, <bad-url-token>,\n            case TYPE.BadString:\n            case TYPE.BadUrl:\n                break scan;\n\n            // ... unmatched <)-token>, <]-token>, or <}-token>,\n            case TYPE.RightCurlyBracket:\n            case TYPE.RightParenthesis:\n            case TYPE.RightSquareBracket:\n                if (token.balance > token.index || token.balance < startIdx) {\n                    break scan;\n                }\n\n                break;\n        }\n\n        length++;\n\n        // until balance closing\n        if (token.balance <= startIdx) {\n            break;\n        }\n    } while (token = getNextToken(length));\n\n    return length;\n}\n\n// =========================\n// Dimensions\n//\n\nfunction dimension(type) {\n    return function(token, getNextToken, opts) {\n        if (token === null || token.type !== TYPE.Dimension) {\n            return 0;\n        }\n\n        var numberEnd = consumeNumber(token.value, 0);\n\n        // check unit\n        if (type !== null) {\n            // check for IE postfix hack, i.e. 123px\\0 or 123px\\9\n            var reverseSolidusOffset = token.value.indexOf('\\\\', numberEnd);\n            var unit = reverseSolidusOffset === -1 || !isPostfixIeHack(token.value, reverseSolidusOffset)\n                ? token.value.substr(numberEnd)\n                : token.value.substring(numberEnd, reverseSolidusOffset);\n\n            if (type.hasOwnProperty(unit.toLowerCase()) === false) {\n                return 0;\n            }\n        }\n\n        // check range if specified\n        if (outOfRange(opts, token.value, numberEnd)) {\n            return 0;\n        }\n\n        return 1;\n    };\n}\n\n// =========================\n// Percentage\n//\n\n// §5.5. Percentages: the <percentage> type\n// https://drafts.csswg.org/css-values-4/#percentages\nfunction percentage(token, getNextToken, opts) {\n    // ... corresponds to the <percentage-token> production\n    if (token === null || token.type !== TYPE.Percentage) {\n        return 0;\n    }\n\n    // check range if specified\n    if (outOfRange(opts, token.value, token.value.length - 1)) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// =========================\n// Numeric\n//\n\n// https://drafts.csswg.org/css-values-4/#numbers\n// The value <zero> represents a literal number with the value 0. Expressions that merely\n// evaluate to a <number> with the value 0 (for example, calc(0)) do not match <zero>;\n// only literal <number-token>s do.\nfunction zero(next) {\n    if (typeof next !== 'function') {\n        next = function() {\n            return 0;\n        };\n    }\n\n    return function(token, getNextToken, opts) {\n        if (token !== null && token.type === TYPE.Number) {\n            if (Number(token.value) === 0) {\n                return 1;\n            }\n        }\n\n        return next(token, getNextToken, opts);\n    };\n}\n\n// § 5.3. Real Numbers: the <number> type\n// https://drafts.csswg.org/css-values-4/#numbers\n// Number values are denoted by <number>, and represent real numbers, possibly with a fractional component.\n// ... It corresponds to the <number-token> production\nfunction number(token, getNextToken, opts) {\n    if (token === null) {\n        return 0;\n    }\n\n    var numberEnd = consumeNumber(token.value, 0);\n    var isNumber = numberEnd === token.value.length;\n    if (!isNumber && !isPostfixIeHack(token.value, numberEnd)) {\n        return 0;\n    }\n\n    // check range if specified\n    if (outOfRange(opts, token.value, numberEnd)) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// §5.2. Integers: the <integer> type\n// https://drafts.csswg.org/css-values-4/#integers\nfunction integer(token, getNextToken, opts) {\n    // ... corresponds to a subset of the <number-token> production\n    if (token === null || token.type !== TYPE.Number) {\n        return 0;\n    }\n\n    // The first digit of an integer may be immediately preceded by `-` or `+` to indicate the integer’s sign.\n    var i = token.value.charCodeAt(0) === 0x002B ||       // U+002B PLUS SIGN (+)\n            token.value.charCodeAt(0) === 0x002D ? 1 : 0; // U+002D HYPHEN-MINUS (-)\n\n    // When written literally, an integer is one or more decimal digits 0 through 9 ...\n    for (; i < token.value.length; i++) {\n        if (!isDigit(token.value.charCodeAt(i))) {\n            return 0;\n        }\n    }\n\n    // check range if specified\n    if (outOfRange(opts, token.value, i)) {\n        return 0;\n    }\n\n    return 1;\n}\n\nmodule.exports = {\n    // token types\n    'ident-token': tokenType(TYPE.Ident),\n    'function-token': tokenType(TYPE.Function),\n    'at-keyword-token': tokenType(TYPE.AtKeyword),\n    'hash-token': tokenType(TYPE.Hash),\n    'string-token': tokenType(TYPE.String),\n    'bad-string-token': tokenType(TYPE.BadString),\n    'url-token': tokenType(TYPE.Url),\n    'bad-url-token': tokenType(TYPE.BadUrl),\n    'delim-token': tokenType(TYPE.Delim),\n    'number-token': tokenType(TYPE.Number),\n    'percentage-token': tokenType(TYPE.Percentage),\n    'dimension-token': tokenType(TYPE.Dimension),\n    'whitespace-token': tokenType(TYPE.WhiteSpace),\n    'CDO-token': tokenType(TYPE.CDO),\n    'CDC-token': tokenType(TYPE.CDC),\n    'colon-token': tokenType(TYPE.Colon),\n    'semicolon-token': tokenType(TYPE.Semicolon),\n    'comma-token': tokenType(TYPE.Comma),\n    '[-token': tokenType(TYPE.LeftSquareBracket),\n    ']-token': tokenType(TYPE.RightSquareBracket),\n    '(-token': tokenType(TYPE.LeftParenthesis),\n    ')-token': tokenType(TYPE.RightParenthesis),\n    '{-token': tokenType(TYPE.LeftCurlyBracket),\n    '}-token': tokenType(TYPE.RightCurlyBracket),\n\n    // token type aliases\n    'string': tokenType(TYPE.String),\n    'ident': tokenType(TYPE.Ident),\n\n    // complex types\n    'custom-ident': customIdent,\n    'custom-property-name': customPropertyName,\n    'hex-color': hexColor,\n    'id-selector': idSelector, // element( <id-selector> )\n    'an-plus-b': anPlusB,\n    'urange': urange,\n    'declaration-value': declarationValue,\n    'any-value': anyValue,\n\n    // dimensions\n    'dimension': calc(dimension(null)),\n    'angle': calc(dimension(ANGLE)),\n    'decibel': calc(dimension(DECIBEL)),\n    'frequency': calc(dimension(FREQUENCY)),\n    'flex': calc(dimension(FLEX)),\n    'length': calc(zero(dimension(LENGTH))),\n    'resolution': calc(dimension(RESOLUTION)),\n    'semitones': calc(dimension(SEMITONES)),\n    'time': calc(dimension(TIME)),\n\n    // percentage\n    'percentage': calc(percentage),\n\n    // numeric\n    'zero': zero(),\n    'number': calc(number),\n    'integer': calc(integer),\n\n    // old IE stuff\n    '-ms-legacy-expression': func('expression')\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}